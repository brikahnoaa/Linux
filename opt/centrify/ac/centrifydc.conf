#
# Default Centrify DirectControl configuration file.
#
# Debug logging
# Use the /usr/share/centrifydc/bin/addebug utility to turn this on and off
# Note that debug logging may have a significant
# effect on performance, and the log file may quickly become very large
log: INFO

# An AD user is NEVER a member of his/her primary AD group.
# 
# This parameter is used to control whether or not 
# adclient should add zone user as member of this primary group. 
# 
# note, this has performance implications when querying the group for adclient
# now has to search for all AD users that has this group as primary group.
#
# adclient.get.primarygroup.membership: false

# GP mappers logging level. Specifies the logging level for GP
# mappers. It allows per mapper logging level as well with
# "log.gp.mappers.<scriptname>".

# GP mappers logging output can be redirected to stdout if needed.
# Again, it allows per mapper setting.


# Log Queue size.  Controls the maximum number of messages that will
# be queued before sending them to syslog. Each message consumes
# roughly 100 bytes.  This value is automatically increased by a factor
# of 4 when running in DEBUG mode
#
# logger.queue.size: 256
#



#
# Select the syslog facility.  The default is auth.  Separate
# facilities may be specified for general logging, adclient audit
# logging, and adnisd logging.  If logger.facility.adclient
# is not specified, it defaults to the value for
# logger.facility.*.
#
# This parameter is controlled by the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Logging Settings"
#               -> "Set general audit logging facility"
#
# logger.facility.*: auth

# This parameter is controlled by the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Logging Settings"
#               -> "Set Adclient audit logging facility"
#
# logger.facility.adclient: auth

# This parameter is controlled by the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Logging Settings"
#               -> "Set NIS audit logging facility"
#
# logger.facility.adnisd: auth
#

#
# Specify the syslog facility for DIAG messages.
#
# logger.facility.diag: auth



#
# Speed up lookups for common users who we know aren't in AD
#
# These values are controlled via group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Login Settings"
#               -> "Specify user names to ignore (lookup)"
#               -> "Specify group names to ignore (lookup)"
#
# nss.user.ignore=file:/etc/centrifydc/user.ignore
# nss.group.ignore=file:/etc/centrifydc/group.ignore
#
# If set to true, users listed in nss.user.ignore will not be search in AD
# that means not only unix user but also AD user will be ignored. The user
# will not be searched as an AD object.
# nss.user.ignore.all: false
#
#
# To speed up common uid/gid lookup, username/groupname specified in
# nss.user.ignore/nss.group.ignore is automatically converted into
# uid/gid list by adclient.
#
# Note: Adclient always write uid/gid list into file:
#  /etc/centrifydc/uid.ignore and /etc/centrifydc/gid.ignore.
#
# nss.uid.ignore=file:/etc/centrifydc/uid.ignore
# nss.gid.ignore=file:/etc/centrifydc/gid.ignore

#
# Override passwd and group entries for this machine.  This mechanism
# can be used to override specific user and group entries for more fine-grained
# control than zoning.  These entries are best managed through Group Policy
#
# Note: Not supported for express mode.
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "NSS Overrides"
#               -> "Specify NSS password overrides"
#               -> "Specify NSS group overrides"
#
# nss.passwd.override: file:/etc/centrifydc/passwd.ovr
# nss.group.override: file:/etc/centrifydc/group.ovr


#
# Retrieving group memberships from Active Directory can be a very
# time consuming and memory intensive operation for groups with large
# numbers of users, or recursive group memberships.  Many Unix commands
# need to map a group id to a name, but are not concerned with the group
# membership.  Unfortunately, the NSS API does not differentiate between
# these two situations. Putting a command in this list tells the nss
# library to skip group member expansion in the getgrent() call.
# This results in tremendous performance improvements for groups with
# large number of members. (Patent Pend.)
#
# The following is the default for most systems
# nss.group.skip.members= ls,chown,find,ps,chgrp,dtaction,dtwm,pt_chmod,adsetgrps,adid,ll
#
# The following is the default for AIX
# nss.group.skip.members= ls,chown,find,ps,chgrp,dtaction,dtwm,pt_chmod,id,login,sshd,sshd2,getty,dtlogin,su,adsetgrps,adid
#

#
# Split up or truncate memberlists larger than 1024 bytes (~125 users).
# This allows Unix utilities to behave correctly when dealing with
# very large groups on operating systems which don't support large groups.
# The default true for Solaris, HPUX and IRIX, false for all others
#
# nss.split.group.membership: true
#

#
# Present the Unix password hash in the getpw* response.  The default is
# false since this is typically considered sensitive information and is
# vulnerable to brute force attack.  Note, setting this to true also requires
# the Microsoft R2 or SFU Unix password synchronization service to be
# installed on ALL domain controllers in the domain
#
# nss.passwd.hash: false
#

#
# When queried user's shell thru CDC nss, this option determine if DirectControl
# emergency shell should be returned for an Audit Required user who does not 
# have rescue right. 
# The default value is false, which mean nologin shell configured in nss.shell.nologin is returned.
#
# Valid Values: 
# true  : return DirectControl emergency shell
# false : return nologin shell configured in nss.shell.nologin
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Login Settings"
#               -> "Enabled nss emergency shell"
#
# nss.shell.emergency.enabled: false
#

#
# Hide the sensitive password attributes of a user for non-root users
# The sensitive password attributes include:
#       Maximum Password Age     
#       Password Expiration Date 
#       Minimum Password Age
#       Change Password Needed
#       Password Last Changed On
#
# Default is true for all Operating Systems, except HPUX (HPUX does not protect this data)
#
# nss.passwd.info.hide: true
#

# Ignore users with uid 0, gid 0, the name root, and the groups wheel and root
# from Active Directory.  Forces these users and groups to be defined locally.
# Prevents a user who has write access to the zone from gaining root access
# on the machine.  The default is true, but group policy should be disabled
# to make this feature completely secure.  You must run adflush to flush the
# cache after changing this value.
#
# nss.squash.root: true

# Specify the source to lookup aliases.
#
# Three possible values: nismaps, mail, proxyaddresses.
#
# To lookup alias from AD user objects by the attribute "mail" or "proxyAddresses",
# please specify either mail or proxyaddresses. However since proxyAddresses is
# an custom attribute, so you need to include it in
# the adclient.custom.attributes.user parameter, otherwise it will fall back to
# nismaps.
# 
# Default is nismaps.
# nss.alias.source: nismaps 
#

#
# Allow non-root user's to be able to see the Alternate Security Identity field
# from Active Directory objects.  The name-mappings for smartcard feature uses
# this field to identify which cards can login to which ad user.
#
# smartcard.name.mapping: false

#
# Allow these users to authenticate locally.
# If something goes wrong with either the network, AD, or adclient, no AD
# users will be able to get in. Users listed here - provided they are also
# mapped users - will still have local access.
# To log in locally, append "@localhost" to your user name when logging in
# (example "root@localhost"). Otherwise, your AD password will be required.
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Login Settings"
#               -> "Allow localhost users"

pam.allow.override: root

#
# Allow a specific user to be mapped to another user.  The variables $HOSTNAME
# and $ZONE contain the machine's current hostname and zone name, and are
# useful for mapping root and other system users to more restricted AD users.
# Note, the target user name must be a Windows (SAMAccount) name, not a zone
# name:
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Set user mapping"
#
# pam.mapuser.unix_user: windows_target
# pam.mapuser.jdoe: Jane Doe
# pam.mapuser.juser: juser_$HOSTNAME
#
# Zone root mapping may be configured by the Windows DirectControl
# Management Console install wizard. To enable, uncomment the following line
#
# Note: This parameter does not take effect on Mac OS X
#
#pam.mapuser.root: root_$ZONE

# Authenticate using the users cached credentials first regardless of the Active Directory
# connectivity state.  This can be used to reduce network traffic on slow networks,
# but may have undesired side effects if authenticated via cache while online.
#
# This value is controlled by group policy under
#   CentrifyDC Settings->Prefer Authentication against cached credentials
#
# adclient.prefer.cache.validation: false

#
# Ignore a specific list of users from CentrifyDC pam authentication,
# allow these users to authenticate locally.
#
#
# You may also specify a file name with a list of users in the file
# pam.ignore.users: jcool jdoe
#
# pam.ignore.users: file:/etc/centrifydc/user.ignore
#


# Allow a specific list of users and/or groups to log into this computer.
# Only these users or users in the groups are allowed.  If this value is set,
# the "deny" flag is ignored. If these values are empty, and the deny values
# are empty, all zone users are allowed to login
#
# Note: Not supported for express mode.
#
# These values are controlled via group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Login Settings"
#               -> "Manage login filters"
#
# You may also specify a file name with a list of users in the file
# pam.allow.users: file:/etc/centrifydc/users.allow
# pam.allow.groups: file:/etc/centrifydc/groups.allow
## pam.allow.users: jdoe krusty
## pam.allow.groups: smokeallow
# pam.deny.users: jcool
# pam.deny.groups: file:/etc/centrifydc/groups.deny
# pam.deny.groups: clowns

#
# If a zoned user is denied access via pam.deny.* or by not being listed in
# pam.allow.* their shell is set the value of nss.shell.nologin, typically
# /bin/nologin or /bin/false.   This adds an extra level of security, insuring
# the zone disabled user cannot obtain shell access, even if authenticated
# through Kerberos, SSH-Keys, or some other non-pam related method.
# Since the group lookup resolution was time consuming in previous releases,
# this step can be disabled, potentially opening a security issue.  Note the
# performance issue with pam.allow/deny group lookup was addressed in
# DirectControl 4.2. Setting this value to false is not recommended.
#
# The default value is true, which forces the substitution.
#
# pam.deny.change.shell: true
#


# Should adclient edit system config files for you at startup.   The default
# is to change all required files.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Automatically manage system configuration files"
#
# adclient.autoedit: true
#
# Individual files can be specifically controlled by following options,
# depending upon the OS platform.  These are ignored if the above value is set
# to false.
#
# Disable HPUX pwgrd.  Setting this to false may improve system
# performance, but some minor DirectControl features may not work.
# Please see the release notes for more information.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Disable pwgrd (HPUX)"
#
# adclient.autoedit.pwgrd: false
#
# Disable nscd password and group caching.   Setting this to false may improve
# system  performance, but some minor DirectControl features may not work.
# Please see the release notes for more information.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Disable nscd group and passwd caching (Solaris, Linux)"
#
# adclient.autoedit.nscd: false
#
# AIX IRS configuration, automatically add nss_cdc
# adclient.autoedit.irs: true
#
# AIX Login configuration, automatically add /usr/bin/dzsh
# adclient.autoedit.logincfg: true
#
# Add centrifydc entries to the nsswitch.conf file
# (HPUX, Solaris and Linux)
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Configure /etc/nsswitch.conf (Solaris, HPUX, Linux)"
#
# adclient.autoedit.nss: true
#
# Add centrifydc entries to the pam.conf or pam.d directory
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Configure /etc/{pam.conf,pam.d}"
#
# adclient.autoedit.pam: true
#

# Specified the reaction for NSS nismap module.
# NSS reaction must be enclosed within square brackets - []
# Supported nismap NSS modules are:
#  - netgroup, protocols, rpc, networks, hosts,
#    services, ethers,
#  - (LINUX only) aliases,
#  - (SOLARIS only) prof_attr, auth_attr, project, ipnodes, printers,
#                   netmasks, bootparams
#
# Default NSS reaction for netgroup is [NOTFOUND=return];
# while others maps are empty string.
#
# adclient.autoedit.nss.netgroup.reaction: [NOTFOUND=return]
# adclient.autoedit.nss.<map_name>.reaction:
#

# Named LRPC socket through which clients communicate with adclient.
adclient.clients.socket: /var/centrifydc/daemon

# Named LRPC2 socket through which clients communicate with adclient.
adclient.clients.socket2: /var/centrifydc/daemon2

# How long before dropping a socket connection to an inactive client,
# in seconds. Zero means "never" -- inadvisable.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set idle client timeout"
#
# adclient.client.idle.timeout: 900
#

# Number of pre-allocated threads for processing client requests.
# If 0, client requests are processed one at a time.
# Changing this parameter requires a restart of adclient
#
# Controlled by Group Policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Set minimum number of threads"
#
# adclient.clients.threads: 4
#

# Maximum number of threads the agent will allocate for processing client
# requests.  Should be greater than or equal to the number of pre-allocated
# threads.  The default value is 20
# Changing this parameter requires a restart of adclient
#
# Controlled by Group Policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Set maximum number of threads"
#
# adclient.clients.threads.max: 20
#



# Whether to use all processors on a multi-processor system.  Change this
# value to false if you encounter stability problems on multi-processor
# systems. Changing this parameter requires a restart of adclient
#
# adclient.use.all.cpus: true
#

# Number of backlog connections to maintain when all threads are busy.
# Changing this parameter requires a restart of adclient
#
# adclient.clients.listen.backlog: 50
#


# The global catalog cache only keeps Distinguished names.  We don't track
# the USNs
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set GC expiration"
#
# adclient.cache.expires.gc: 3600
#

# Amount of time, in seconds until a generic object's USN is checked for
# changes. Cache times are reset if there has not been any change to the USN
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set object expiration"
#
# adclient.cache.expires: 3600
#

# Object specific cache timeouts.  If not specified for a specific object
# class, the general cache expiration value is used
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set user object expiration"
#               -> "Set group object expiration"
#
# adclient.cache.expires.user: 3600
# adclient.cache.expires.group: 3600

#
# Specific cache timeout for the object membership information.
# If not specified the object expiration settings are used.
#
# adclient.cache.expires.user.membership: 3600
# adclient.cache.expires.group.membership: 3600

# Amount of time, in seconds, that must pass before an object will be refreshed
# from AD, even if cache is supposed to be bypassed.
#
# Controlled by group policy under the setting
#   CentrifyDC Settings->Timeout Settings->Object Refresh Expiration Time
#
# adclient.cache.refresh: 5
#

# Object specific cache refresh timeouts.  If not specified for a specific object
# class, the general cache refresh value is used
#
# Controlled by group policy under the settings
#   CentrifyDC Settings->Timeout Settings->User Object Refresh Expiration Time &
#   CentrifyDC Settings->Timeout Settings->Group Object Refresh Expiration Time
#
# adclient.cache.refresh.user: 5
# adclient.cache.refresh.group: 5
#

# If true encrypt all AD Cached data
# If you enable this feature the cache will be flushed each time ADClient
# starts up.
# This parameter can be controlled from the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Encrypt Adclient cache data"
#
# adclient.cache.encrypt: false
#

# Specify the (legal) kerberos encryption type
# This key only meaningful if adclient.cache.encrypt is true
# This parameter can be controlled from the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Use the legal Kerberos type for cache encryption"
#
# adclient.cache.encryption.type: arcfour-hmac-md5
#

# How many minutes will a negative object live in the cache, regardless of
# expiration time?  Default is 5 minutes.  0 means forever.
# This parameter can be controlled from the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set cache negative life time"
#
# adclient.cache.negative.lifetime: 5
#

# How often, in hours, should adclient flush it's entire cache.  0 means never.
#
# adclient.cache.flush.interval: 0
#

# How often, in seconds, should adclient flush its DZ cache.  0 means never. 
#
# adclient.cache.flush.interval.dz: 0
#

# How many hours will a regular object live in the cache, regardless of
# expiration time?  Default is forever.
#
# adclient.cache.object.lifetime: 0
#

# How often should the daemon clean up the cache, looking for old objects,
# negatives and potential complete cache flush.  This parameter should be
# less than or equal to the three above: adclient.cache.negative.lifetime,
# adclient.cache.flush.interval, and adclient.cache.object.lifetime
# Default is every 10 minutes
#
# This parameter can be controlled from the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Set cache cleanup interval"
#
# adclient.cache.cleanup.interval: 10
#

# Whether the cache enables creation of indexes on UPN Names.
# This is useful to resolve the case when the UPN of one user is equal to the
# SAM@Domain Name of another user, and both user objects are stored in the cache.
#
# Default is false
#
# adclient.cache.upn.index: false
#


# 
# This parameter is used to explicitly specify the domain names 
# to authenticate SAM Account Names against.
# It is used to disambiguate between identical SAM Account Names across domains
# Note: adclient.cache.upn.index must be set to true.
#
# adclient.preferred.login.domains: <domain1> <domain2> ...
#


# Amount of time, in seconds, which adclient will wait for a response from
# ActiveDirectory before it gives up.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set LDAP response timeout"
#
# Note ldap requests are retried twice before the agent decides we are
# disconnected.  On the second request, this value is doubled.
#
# adclient.ldap.timeout: 7
#

# Amount of time, in seconds, which adclient will wait for a search response
# from ActiveDirectory before it gives up.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set LDAP search timeout"
#
# Note ldap requests are retried twice before the agent decides we are
# disconnected.  On the second request, this value is doubled.
# By default, this value is double the above request timeout
#
# adclient.ldap.timeout.search: 14
#

# Amount of time, in seconds, which adclient will wait for a
# socket connection timeout during ldap binding
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set LDAP connection timeout"
#
# adclient.ldap.socket.timeout: 5
#



# Amount of time, in seconds, which adclient will wait for data coming
# a client request.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set LRPC2 receive timeout"
#
# adclient.lrpc2.receive.timeout: 30
#

# Amount of time, in seconds, which adclient will wait for reply
# data to be sent in response to a client request.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set LRPC2 send timeout"
#
# adclient.lrpc2.send.timeout: 30
#

# Setting to control LRPC2 message signing behavior.
# Valid values are:
#       disabled -  never sign LRPC2 messages.(Default value)
#       allowed  -  does not require LRPC2 message signing, but 
#                   can choose to do so if peer allows or requires it.
#       required -  must sign LRPC2 messages. 
#
# Controlled by group policy under the setting
#       "Computer Configuration"
#       -> "Centrify Settings"
#          -> "DirectControl Settings"
#             -> "Specify Message Signing for LRPC2 Communication"
#
# lrpc2.message.signing: disabled
#

# LDAP traffic encryption option.
# possible values: Allowed, Disabled, Required, SignOnly
#
# adclient.ldap.packet.encrypt: Allowed
#

# Maximum number of items in each page of a paged LDAP search.
# Lower numbers increase traffic to AD and decrease the adclient RAM usage,
# while higher numbers decrease traffic to AD and increase the adclient RAM
# usage.
#
# adclient.paged.search.max: 100
#


# When the Kerberos PAC information is not available, the agent may
# attempt to use the Active Directory tokenGroups attribute on the user
# object to determine the user group membership.  In the case of Windows
# 2000/2003 mixed-mode domains, the tokenGroups attribute may include universal
# groups which would not normally be included in the Windows 2000 Kerberos PAC.
# This should be harmless, since Universal groups are typically not used
# in mixed mode domains for this reason.  In the unusual case that the
# inconsistent inclusion of universal groups in the user's group membership
# list is causing problems, set the following value to false.  Setting this
# value to false will force the agent to use a slower mechanism for finding
# group membership which may result in slower user login, but the results
# will be consistent with the PAC.
#
# adclient.use.tokengroups: true
#


#
# By default, adclient process group membership from Active Directory.  If
# users are members of a large number of Active Directory groups (> 500), you
# may experience a delay when the user logs in, due to the number of groups
# which need to be retrieved from Active Directory.   This is typically only a
# problem when running in "Workstation" mode.  When joining a zone, the group
# selection is limited to zone enabled groups.
#
# Note enabling this feature in Workstation mode will disable the
# "Mac Administrator" Group Policy.  A work-around is available for this
# problem on the Centrify Support Portal.
#
# adclient.get.group.membership: true
#

# 
# Specify if Centrify DirectControl use Microsoft PAM Privilege Escalation
# feature in the machine. When this is set to true, adclient get the user's group
# from PAC in the TGT when the user has login or has a process running. 
# This only apply to user login using kerberos protocol.
#
# This parameter is controlled by the Group Policy:
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Enable Active Directory PAM Privilege Escalation Feature"
#
# By default, this feature is disabled in the machine.
#
#  microsoft.pam.privilege.escalation.enabled: false 
#

#
# Maintain compatibility with DirectControl 2.X zones.  The default is true
# the zone was created with 2.0 or 3.0 console.  The default is false for
# zones created with the 4.x console.
# If you have users or groups that were created with DirectControl 2.X this
# value should be true.  This will decrease login performance on Windows 2000
# domain controllers.  To upgrade zones and user please see Analyze Forest
# documentation.
#
# adclient.version2.compatible: false
#

#
# This set of keys allow to specify additional attributes
# for the standard objects that adclient caches.  Any number of
# additional attributes can be specified separated by spaces.
#
# Note that attributes are case sensitive and must exactly match
# the case as defined in Active Directory (hint use ADSIEdit to
# view an object's attributes by right click the object and
# selecting properties).
#
# Note that it is important the flush the case if you change
# these settings.
#
# The default for each is an empty string (no custom attributes).
#
# Attributes that are applied to all three objects
# adclient.custom.attributes: userCertificate userSMIMECertificate
#

#
# Attributes that are applied to user objects
adclient.custom.attributes.user: unixUserPassword msSFU30Password
#

#
# Attributes that are applied to group objects
# adclient.custom.attributes.group: sDRightsEffective
#

#
# Attributes that are applied to computer objects
# adclient.custom.attributes.computer: accountNameHistory company
#

#
# The password prompts are controlled via group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Password Prompts"
#               -> "Set login password prompt"
#               -> "Set notification text for password change"
#               -> "Set password prompt for old password change"
#               -> "Set password prompt for new password change"
#               -> "Set password prompt for confirming new password change"
#
# pam.password.enter.mesg: "Password: "
# pam.password.change.mesg: "Changing password for "
# pam.password.old.mesg: "(current) password: "
# pam.password.new.mesg: "Enter new password: "
# pam.password.confirm.mesg: "Confirm new password: "
#

# The mfa authentication need user select available mechanism when authenticating

# The mfa authentication need user answer security question when selecting
# "Answer Security Question" in challenge.
 
# What to do if, when a user is logging in, PAM discovers that the user's AD
# record has the same UID or the same user name (but not both) as a local
# system account. Choices:
#   ignore = Don't check, do nothing.
#   warn   = Warn user of conflict after logging (default).
#   error  = Disallow user from logging in.
#
# On Mac, this setting only apply to user name conflict. System will deny any
# login for UID conflict automatically.
#
# this setting is controlled via group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Pam Settings"
#               -> "Set UID conflict resolution"
#
# pam.uid.conflict: warn
#


# Customers with a centralized password management facility (encompassing
# Active Directory) may set these values to:
#  pam.allow.password.expired.access:
#    true:  Allow access to users with expired passwords.
#    false: Deny access to users with expired passwords.
#  pam.allow.password.change:
#    true:  Allows users to change their passwords.
#    false: Disallow users from changing their passwords.
# Generally, both should have the same value.
# Setting them to different values:
#   Permit users with expired passwords to log in but do not prompt for
#   password change:
#     pam.allow.password.expired.access: true
#     pam.allow.password.change:         false
#   Allow users to change their passwords but not allow login when password
#   has expired:
#     pam.allow.password.expired.access: false
#     pam.allow.password.change:         true
# Accompanying message strings:
#   pam.allow.password.expired.access.mesg:
#     Message displayed when access is denied because password has expired and \
#     pam.allow.password.expired.access is false.
#   pam.allow.password.change.msg:
#     Message displayed when password change is not permitted because \
#     pam.allow.password.change is false.
#
# pam.allow.password.expired.access: true
# pam.allow.password.change: true
# pam.allow.password.expired.access.mesg: Password expired - access denied
# pam.allow.password.change.mesg: Password change not permitted
#

#
# Message to be displayed if the user account is locked because of failed
# login attempts.  The defaults are generic for improved security
#
# pam.account.locked.mesg: Account cannot be accessed at this time.\nPlease contact your system administrator.
#


# Message displayed when the account password will expire in
# pam.password.expiry.warn days or less.
#
# When the message is displayed, the '%d' token is replaced with the
# number of days until expiration. The message must contain exactly
# one '%d' token, and no other '%' characters.
#
# pam.password.expiry.warn.mesg: Password will expire in %d days
#

# Message displayed during login when access is denied because a user's
# account has expired.
#
# pam.account.expired.mesg: Account cannot be accessed at this time.\nPlease contact your system administrator.
#

# Message displayed during login when access is denied because a user's
# account has disabled.
#
# pam.account.disabled.mesg: Account cannot be accessed at this time.\nPlease contact your system administrator.
#

# Message displayed during login when access is denied because of a
# workstation restriction.
#
# pam.workstation.denied.mesg: Account cannot be accessed at this time.\nPlease contact your system administrator.
#

# Message displayed during password change when the old password is incorrect.
#
# pam.auth.failure.mesg: Password authentication failure
#

# Message displayed during password change when the two new passwords do not
# match each other.
#
# pam.password.new.mismatch.mesg: New passwords don't match
#

# Message displayed when an empty password is entered.
# Empty passwords are not permitted.
#
# pam.password.empty.mesg: Empty password not allowed
#

# Message displayed during password change when the operation fails because
# of a domain password policy violation (not enough characters, not complex
# enough, etc).
#
# pam.policy.violation.mesg: The password change operation failed due to a policy restriction set by the\nActive Directory administrator. This may be due to the new password length,\nlack of complexity or a minimum age for the current password.
#

# Message displayed when a user's home directory is created.
#
# pam.homedir.create.mesg: Created home directory
#

# Message displayed during password change when Centrify's adclient daemon is
# inaccessible.
#
# pam.adclient.down.mesg: (Unable to reach Active Directory - using local account)
#


# Message displayed by adpasswd when a user cannot change their password
# because it has been disallowed.
#
# adpasswd.password.change.disabled.mesg: Password change for this user has been disabled in Active Directory
#

# Message displayed by adpasswd when a user cannot change another user's
# password because of insufficient permissions.
#
# adpasswd.password.change.perm.mesg: You do not have permission to change this users password.\nPlease contact your system administrator.
#

# Message displayed by adpasswd when a user cannot change their password
# because the account is locked.
#
# adpasswd.account.disabled.mesg: Account cannot be accessed at this time.\nPlease contact your system administrator.
#

# Message displayed by adpasswd when a user is unrecognized or the password
# is invalid.
#
# adpasswd.account.invalid.mesg: Invalid username or password
#

# Allow PAM to create user Kerberos credential cache.
#   true  = create user Kerberos credential cache
#   false = no user Kerberos credential cache will be created
# Note that, when set to false, no user Kerberos credential cache is created and any attempt to do SSO operation is expected to fail.
#
# The user Kerberos credential cache could be file based or KCM in-memory mode, depending on setting krb5.cache.type.
#
# This value is controlled via group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Allow PAM to create user Kerberos credential cache"
#
# pam.auth.create.krb5.cache: true
#

# Allow Kerberos Authentication in PAM. Create .k5login file the first time the user logs on.
# By default the .k5login file will be created in ${HOME},
# but can be changed by setting krb5.conf.k5login.directory.
#
#   true = create .k5login.
#   false = do nothing.
# This value is controlled via group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Pam Settings"
#               -> "Create k5login"
#
# pam.create.k5login: true
#

# if user's home directory does not exist in local machine, PAM creates it.
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Pam Settings"
#               -> "Create home directory"
#
# pam.homedir.create: true
#

# If user's home directory does not exist in local machine, PAM creates it
# with this permissions.
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Pam Settings"
#               -> "Set home directory permissions"
# Note the permission value must be in Octal. That is,  0XXX or 0YYY
#
# pam.homedir.perms: 0700
#

# By default, PAM creates user home directory and copies everything in
# the skeleton directory, including the permissions, to the newly
# created directory. If this setting is true, PAM will copy everything
# in the skeleton directory but use the permissions of pam.homedir.perms
# recursively.
#
# pam.homedir.perms.recursive: false
#

# By default, PAM creates user home directory and copy the dereferenced symbolic
# links in the skeleton directory.
# If this setting is false, PAM will copy symbolic links in the skeleton
# directory instead. 
# Note that we only care about the symbolic link references to a regular file.
#
# pam.homedir.create.follow.symlink: true
#

# our pam.conf settings cause this function to be called twice:
#    one normal call and one deny call.
# PAM behaves oddly on Mac 10.7, Solaris 2.6 and all HPUX. pam_setcred
#   calls the remaining modules even the 'sufficient' is fulfilled.
#   because pam_setcred is controlled by the "auth" control flag.
#
# Set true, the sufficient will use deny mode.
#
# HPUX, Mac OS
# pam.setcred.respect.sufficient true
# Linux, Solaris, AIX
# pam.setcred.respect.sufficient false
#

# On different platform, PAM-enabled application calls pam_setcred with different PAM flag:
# 1. PAM_ESTABLISH_CRED     
#    Initialize the credentials for the user. 
# 2. PAM_REINITIALIZE_CRED  
#    Fully reinitialize the user's credentials.
# 3. PAM_REFRESH_CRED
#    Extend the lifetime of the existing credentials.
# By default, we only support PAM_ESTABLISH_CRED 
# The support of PAM_REINITIALIZE_CRED and PAM_REFRESH_CRED flags can be enabled by setting following parameters to true.
#
# pam.setcred.support.reinitialize: false
# pam.setcred.support.refresh: false
#

# Specify a list of programs which will require Centrify PAM module 
# to always create new Kerberos credentials cache and update 
# the KRB5CCNAME environment value in the PAM session.
# By default, it contains only 'su'.
#
# pam.setcred.program.create.creds: su
#

# Specify the list of domains PAM authentications use NTLM authentication
# methods rather than Kerberos. This helps with users that are behind a
# firewall where the Kerberos ports are blocked, but a trust relationship
# exists between domains inside and outside the firewalls.  The domain names
# must be AD domain names (not NTLM names).
#
# pam.ntlm.auth.domains: <domain1> <domain2> ...
# pam.ntlm.auth.domains: bar.com foo.bar.com foo2.bar.com
#
# this setting is controlled via group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Pam Settings"
#               -> "Specify NTLM authentication domains"
#
# The default is an empty list.
#

# Specify the list of domains and forests to be treated by adclient as one-way trusted domains.
# Supported values are:
#  - two-way trusted forests
#  - domains that have two-way external trust relationship with local domain.
#
# Note that after this parameter is changed, you should run "adflush --trusts/-t"
# to have adclient refresh the cached trust information immediately,
# and "adflush --objects/-o" to flush the cached cross forest objects.
#
# The default is an empty list.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Force domains and forests to be one-way trusted"
#
# adclient.one-way.x-forest.trust.force:



#
# You can specify a list of AD to NTLM domain mappings with this parameter. Useful in cases
# where NTLM authentication is used because firewalls prevent Kerberos authentication, and
# prevent the automatic discovery of AD to NTLM domain mappings.
# Use this option to specify a file of colon separated values of the form ADDomain:NtlmDoamin
# adclient.ntlm.domains: file:/etc/centrifydc/domains.conf
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Specify AD to NTLM domain mappings"
#
# Use this form to directly specify the values
# adclient.ntlm.domains: ACME.COM:ACME

#
# You can specify what characters will be allowed for NTLM name forms to
# separate the domain portion from the name.
# For instance setting this value to "\\/+" allows any of the following forms
# to be syntactically correct: DOMAIN\user DOMAIN/user DOMAIN+user.
# Note that the back slash can be problemmatic for Unix shells and sometimes you
# may need to specify it as "DOMAIN\\user"
#
# In addition the 'first' character in the list will be used when adclient
# internally generates NTLM names.
#
# Replaces the deprecated auto.schema.separator keyword.
#
# Default is "+/\\"
# adclient.ntlm.separators: +/\\










# Default group for adupdate user add
#
# adupdate.useradd.group.default: 10000
#

# Additional service principals for key table entry
# Default is "http ftp cifs nfs afpserver ipp vnc" on Mac OS X and
# "ftp cifs" on other platforms.
#
# adclient.krb5.service.principals: ftp cifs
#

#
# The name form to be used as the principal in the
# Kerberos Ticket
# The acceptable values are "upn" and "sam".
# The default value is "sam".
#
# Note: 1) If "upn" is specified, and in case the UPN is not available,
#       the SAM@DomainName will be used.
#       2) For MIT users, the UPN will still be used even if
#       "sam" is specified. 
# 
# adclient.krb5.principal: sam
#

# Force principal name in the Kerberos Ticket to lowercase
# This settings is used when machine is joined to classic zone, hierarchical zone, or auto-zone.
#
# adclient.krb5.principal.lower: false
# 

# Encryption types supported for getting tickets.
#
# Default set:
# adclient.krb5.tkt.encryption.types: aes256-cts aes128-cts arcfour-hmac-md5 des-cbc-md5 des-cbc-crc
#

# Controls whether to replace the default_tgs/tkt_enctypes in krb5.conf with the values
# specified in adclient.krb5.tkt.encryption.types. When it is set true, it will
# just replace the two parameters in krb5.conf with the values specified in adclient.krb5.tkt.encryption.types.
# When it is set false, it will merge the values from both krb5.conf and centrifydc.conf.
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Controls if strictly enforce the encTypes"
# Default: false
# adclient.krb5.tkt.encryption.types.strict: false
#

# Filter out weak cryptions types from :
#   adclient.krb5.tkt.encryption.types, adclient.krb5.permitted.encryption.types.
#
# Weak encryption types include: 
#  des-cdc-crc, des-cbc-md4, dec-cbc-md5, dec-cbc-raw, des3-cbc-raw, 
#  des-hmac-sha1, arcfour-hmac-exp, rc4-hmac-exp, arcfour-hmac-md5-exp
#
# Note that setting this to false may cause authentication failures in 
# existing Kerberos infrastructures that do not support strong crypto.
# Users in affected environments should set this tag to true until their
# infrastructure adopts stronger ciphers.
#
# The default value is true. 
#
# adclient.krb5.allow_weak_crypto: true
#


# Force password salt lookup from the KDC.  This is only required if you remove
# arcfour-hmac-md5 from the list above and you change a user-principal-name in
# Active Directory without changing the user's password.  Changing this value
# to true may cause "pre-auth required" messages to appear in the Active
# Directory event log
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Force Salt Force Lookup Password from KDC"
#
# adclient.force.salt.lookup: true
#

# Encryption types permitted in client credentials.  These names are defined
# by Kerberos.
#
# If this parameter is not defined in the configuration file,
#
# * the default encryption types permitted for Windows 2000 server and
#   Windows Server 2003 are:
#
#   adclient.krb5.permitted.encryption.types: arcfour-hmac-md5 des-cbc-md5 des-cbc-crc
#
# * the default encryption types permitted for Windows Server 2008 domain
#   functional level are:
#
#   adclient.krb5.permitted.encryption.types: aes256-cts aes128-cts arcfour-hmac-md5 des-cbc-md5 des-cbc-crc
#
#   Although you can specify these types in an environment other than 2008
#   domain functional level, they are not useful and may cause extra network
#   round trips during the authentication process.
#

# Controls whether to replace the permitted_enctypes in krb5.conf with the values
# specified in adclient.krb5.permitted.encryption.types. When it is set true, it will
# just replace. When it is set false, it will merge like before.
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Controls if strictly enforce the permitted_enctypes"
# Default: false
# adclient.krb5.permitted.encryption.types.strict: false

# Number of keytable entries to be kept for a principal
#
# adclient.krb5.keytab.entries: 3
#

# Whether adclient should update the krb5.conf file on Unix or 
# /Library/Preferences/edu.mit.Kerberos on OS X
#
# Default value is false on OS X 10.7 and beyond, true on other platforms
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Manage Kerberos Configuration"
#
# adclient.krb5.autoedit: true
#

# how often the Krb5config file should be updated (in hours)
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Set configuration update interval"
#
# krb5.config.update: 8
#

# Whether adclient should update server entries in krb5.conf according to Domain Controller (DC) switchings,
# either due to DC/site failover or rebinding ldap bindings to the preferred site. 
#
# adclient.dc.switch.update.krb5.conf: true


#
# This parameter enables merging of custom krb5.conf entries into the existing krb5.conf. 
# Specify the path to a syntactically valid custom krb5.conf file. (see format below)
# For the directives [libdefaults], [domain_realm] and [realms], 
# the new keyword = value pairs will be added in the corresponding directive
# to the existing krb5.conf. New realms will also be added under [realms].
# If a keyword already exists in the original file, the keyword entry from the
# custom file will be discarded. (WARN messages will be displayed in the log on every conflict)
# For the additional sections like [capaths], [appdefaults], [plugins], [login],
# [logging], [dbdefaults], [dbmodules], [kdcdefaults], [kdc], [kadmin], [password_quality], [otp],
# the entire section from the custom file will be added directly into the original krb5.conf,
# and overwrite any existing entries in those sections.
# By default, this parameter is not enabled, and the default value is an empty string
#
# Note: 
#   1) The specified custom file must be owned by root.
#   2) For Mac, the configuration parameter adclient.krb5.autoedit must be set to true
#
# ---------------------------------------------------------------------
# Expected Format of the Custom Krb5.conf:
# 
# [libdefaults]
#  keyword1 = value1
#  keyword2 = value2
# [domain_realm]
#  domain = realm
#  hostname = realm
# [realms]
# REALM1 = {
#  tag1 = value1
#  tag2 = value2
# }
# REALM2 = {
#  tag1 = value1
# }
# [capaths]
#  to-be-copied-as-is
# [plugins]
#  to-be-copied-as-is
# [appdefaults]
#  to-be-copied-as-is
# [login]
#  to-be-copied-as-is
# [logging]
#  to-be-copied-as-is
# [dbdefaults]
#  to-be-copied-as-is
# [dbmodules]
#  to-be-copied-as-is
# [kdcdefaults]
#  to-be-copied-as-is
# [kdc]
#  to-be-copied-as-is
# [kadmin]
#  to-be-copied-as-is
# [password_quality]
#  to-be-copied-as-is
# [otp]
#  to-be-copied-as-is

# ---------------------------------------------------------------------
#
#
# adclient.krb5.conf.file.custom: file:/path/root-owned-custom-krb5.conf
#


# Controls whether adclient should remove any unknown hosts 
# for the joined domain in the [domain_realm] section of krb5.conf 
# Default: false
# adclient.krb5.conf.domain_realm.strict: false

# The krb5.conf [ realm ] section is updated with informatin of KDC's from the preferred site.
# Setting this parameter to true will extend this to include all reachable KDC's regardless of site.
# The default setting is false.
# adclient.krb5.conf.domain_realm.anysite: false



# interval in days for changing the machine trust account password
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Set password change interval"
#
# adclient.krb5.password.change.interval: 28
#



#
# In some Active Directory environments the FSMO role holder is not functional
# and passwords changes are not synchronized right away.  This can lead to 
# password change verification problems especially in the case of a read-only
# domain controllers that cache computer account passwords.
#
# The verification process is vital to the password change operation as it 
# enables adclient to reliably discover the newly changed Kerberos 
# Key Version Number - an essential value for correct Kerberos operation.
#
# The following two parameters control whether or not and for how long adclient
# will keep retrying to verify the password change in the background, and if
# successful, proceed with completing the password change and updating the 
# Kerberos keytab with the latest password hashes.
#

#
# This parameter controls how many times to attempt computer password change
# verification in the background.  The default is zero (no attempts).  
#
# adclient.krb5.password.change.verify.retries: 0
#

#
# This paramter controls whether adclient should disable Kerberos built-in ccselect plugins.
# If set to true, adclient will disable all ccselect built-in plugins in "plugins" section of
# krb5.conf file if "adclient.krb5.autoedit" is set to true.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Disable Kerberos built-in ccselect plugins"
# 
# krb5.conf.plugins.ccselect.disable: true
#

# Alternative location for user .k5login files.
# If specified, this string value will be used for the
# k5login_directory in the [libdefaults] stanza in krb5.conf,
# and user's .k5login file will be named as <k5login_directory>/<unix_name>.
# For security reasons the specified directory should be owned by root
# and writeable to root only.
#
# This value is controlled via group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Alternative location for user .k5login files"
#
# krb5.conf.k5login.directory:
#

#
# This parameter controls the delay (in seconds) between computer password
# change verification attempts.  The default is five minutes.
#
# adclient.krb5.password.change.verify.interval: 300
#

# custom krb5 options for use when joining
#
# adjoin.krb5.conf.file: /etc/centrifydc/krb5_join.conf
#

# Controls whether Kerberos will check the source address on private messages
# to confirm if the response came back from the same KDC the request was sent
# to.  This defaults to false, so that Centrify can work seamlessly when AD
# is behind a NAT or if the closest domain controller is read-only.
#
# adclient.krb5.passwd_check_s_address: false
#

# Controls whether Kerberos should set HostAddresses option with local addresses
# in AS_REQ. This defaults to false.
#
# adclient.krb5.use.addresses: false
#

# Controls whether Kerberos should send machine's prew2k hostname as NetBIOS type
# HostAddresses in AS_REQ. This defaults to true.
#
# adclient.krb5.send.netbios.name: true
#

# Set the extra addresses to be added to HostAddresses option in AS_REQ. This
# allows a computer to use multiple local addresses, in order to allow Kerberos
# to work in a network that uses NATs. The addresses should be in a comma-separated
# list. This defaults to nothing.
#
# adclient.krb5.extra_addresses:
#

# Set the maximum times of trying to generate a random password for a AD principal
# The default is 10
#
# adclient.random.password.generate.try: 10
#
#
# Set the complexity requirements for the random password
# English uppercase characters (A through Z)
# English lowercase characters (a through z)
# Base 10 digits (0 through 9)
# Non-alphabetic characters (for example, !, $, #, %)
#
# 1=Upper, 2=Lower, 4=digit, 8=special char
# The default is 7 (Upper, Lower and digit)
#
# adclient.random.password.complexity.pattern: 7
#
#
# Set the minimum length of the random password
# The default value is 15
#
# adclient.random.password.length.min: 15
#
#
# Set the maximum length of the random password
# The default value is 21
#
# adclient.random.password.length.max: 21
#

# Password hash storage.  By default, a Unix style SHA256 hash of the user's
# password is stored in the cache when the user authenticates via login.
# This allows for disconnected logins.  The following values allow you
# to control which users will or will not have their password hash stored
#
# These settings are controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Set password cache"
#
# To only allow specified users from having their hash stored,
# use the allow parameter.  The default is empty which allow all users.
# Users must be specified by samAccountName@domain.name
#    adclient.hash.allow: jdoe@centrify.com bsmith@eng.centrify.com
#
# To prevent specified users from having their hash stored,
# use the deny parameter, all other users are allowed.  The default is empty
# which allows all users
# (overrides adclient.hash.allow)
#    adclient.hash.deny: jdoe@centrify.com bsmith@eng.centrify.com
#
# The amount of time before the hash will expire in days. 0 means never expires
# The default is 0
#
# adclient.hash.expires: 0
#

# Prevalidated users.  Disconnected authentication based on saved
# password hashes can only be used for users that have previously
# logged into the system.  If you have users that have never
# logged into the system, but still require that they be
# authenticated when the system is disconnected, you can select
# users for prevalidation.  This service is typically used for a
# group of administrators that need access to the disconnected
# system even if they have never logged in.
#
# These settings are controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Account Prevalidation"
#
# In order for a user to be prevalidated, the user must have a
# Service Principal Name (SPN) set in the form of:
#   preval/user
# Where 'user' is the User Logon Name, which can be  either
#  1. name part in the user's UPN, if the domain part matches the user's domain.
#  2. samAccountName, if UPN is empty or UPN's domain part is different from user's domain;
# and 'preval' is the service name specified by the
# adclient.prevalidate.service parameter below.
#
# By default, no users are prevalidated.
# If you specify either
#   adclient.prevalidate.allow.users or
#   adclient.prevalidate.allow.groups parameters,
# only those users will be prevalidated, with the exception of
# users specified in
#   adclient.prevalidate.deny.users and
#   adclient.prevalidate.deny.groups
# If you wish to include all users in the zone without any
# exceptions, set adclient.prevalidate.allow.groups to the string 'all@zone'.
#
# CAVEAT: The deny users/groups settings are useless without settings in allow
#         user/groups. In other words, a settings for deny only makes sense if there
#         is a setting for allow.
#
# For example, the attributes could be used as follows:
#   adclient.prevalidate.allow.users: jdoe
#   adclient.prevalidate.allow.groups: admins
#   adclient.prevalidate.deny.users: bsmith
#   adclient.prevalidate.deny.groups: contractors
#

# The credentials for prevalidated users are refreshed when the
# system boots, when adclient is started, after an 'adflush',
# after a user changes their password, and periodically to ensure
# that prevalidation will continue working after password changes.
# A value of 0 disables all prevalidation of users.
# How often we refresh periodically (in hours)
#
# adclient.prevalidate.interval: 8
#

# The service name to use for prevalidated users (see comments above).
#
# adclient.prevalidate.service: preval
#

# How often we renew Kerberos credentials for users (in hours)
# 0 indicates no renewal
#
# The default value is 8 before Centrify DirectControl Agent version 5.1.0,
# and 4 since then.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Set credential renew interval"
#
# krb5.cache.renew.interval: 4
#

# Turn on Kerberos credentials cache deletion for logged out users
# Kerberos credentials caches that are owned by users who are
# not logged in will be periodically deleted.  Note that this
# includes users who gained credentials via su - as such users are
# not technically logged in, their cache will be removed.
# Additionally CDC users will have their caches removed at log out.
# modes:
# off : turn off credentials cache deletion
# cdc : delete only credentials caches that were created by DirectControl
# all : delete credentials caches that were created by any program
#       (also removes credentials caches where the user cannot be resolved)
# The default mode is cdc
#
# krb5.cache.clean: cdc
#

# How often we delete current credentials caches for
# logged out users (in minutes).
# Zero turns off periodic cache cleaning
# The default value is 30
#
# krb5.cache.clean.interval: 30
#

# Define an exclusion list when adclient cleans AD users' cache files.
# For user listed in this list, adclient will not clear his/her krb5cc_* file.
# Please use unix name of AD user in the list and use comma to separate them.
# The default value is EMPTY.
#
# krb5.cache.clean.exclusion:
#


# How long (in days) before force deleting a Kerberos credential cache since the TGT was retrieved,
# no matter whether the owner user is still logged in or has running processes, 
# or whether the user is specified in krb5.cache.clean.exclusion, 
# krb5.cache.infinite.renewal.batch.users or krb5.cache.infinite.renewal.batch.groups.
# The default value is 0, which means never.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Specify maximum Kerberos credential cache lifetime"
#
# krb5.cache.clean.force.max: 0
#

#
# Define type of kerberos crendential cache adclient should be created when AD user login.
# Valid value: 
#    FILE : create FILE based credential cache in /tmp when AD user login.
#    KCM  : create in-memory based credential cache. This require KCM server to be running. 
#
# Note: This parameter does not take effect on Mac OS X. FILE based credential
# cache will always be used.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Specify credential cache type for AD users"
#
# Default is FILE. 
#
# krb5.cache.type: FILE

# Should we create forwardable tickets for the users
# true indicates yes, false indicates no
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Generate the forwardable tickets"
#
# krb5.forwardable.user.tickets: true
#

# Whether to permit lookup of service principals using DNS.
# Setting this value to 'true' is not recommended because it makes
# the system less secure.
#
# krb5.permit.dns.spn.lookups: false
#


#
# If set to true, force all Kerberos requests to use TCP rather than UDP with
# TCP fail-overs.  Important for cases where intervening routers are configured
# to silently discard large UDP packets, or are configured to send ICMP
# fragmentation required responses, leading to Kerberos fragmenting UDP packets
# opening the door to possible intermittent failures due to packet re-ordering.
# The default setting for this parameter is true.
#
# krb5.forcetcp:true

#
# This value sets the maximum size packet that the Kerberos libraries will
# attempt to send over a UDP connection first before retrying with TCP
# if necessary. If the packet size is larger than this value only TCP will be
# tried. If set to 1, TCP will always be used.  The hard UDP limit is 32700.
# Values larger than this are ignored and the UDP hard limit is enforced.
#
# This key only takes effect if "krb5.forcetcp" is set to false.
# If "krb5.forcetcp" is true, and DirectControl is managing the krb5.conf file,
# it will set udp_preference_limit to 1, so that the Kerberos libraries will always
# use TCP.
#
# krb5.udp.preference.limit: 1465

#
# If set to true, enables Kerberos to automatically correct for
# a time difference between the system clock and the clock used by the KDC.
# This is only necessary if your system clock is drifting, and
# NTP and adclient SNTP settings are not used on the system.
#
# krb5.use.kdc.timesync: false

#
# By default, a user's TGT will be verified by retrieving and verifying a
# service ticket for the local system. This check is done in order to
# prevent a well-known attack (Zanarotti aka screen-saver attack) whereby
# a rogue KDC could respond to our request to get the user's TGT.
# If set to false, the spoofing check will be disabled and will significantly
# improve the authentication performance.
#
# This setting is ignored when microsoft.pam.privilege.escalation feature is
# is enabled in Licensed Mode.
#
# krb5.verify.credentials: true
#

# 
# When performing credential verification, a service ticket is fetched for the local system. 
# After credential is verified, the PAC info in the service ticket will be used by the local system. 
# Before using the user's PAC, user can select to verify if the PAC is from a trusted KDC, 
# to prevent a well known "silver ticket" attack.  
# This setting takes effect when krb5.verify.credentials is true or when DirectControl is using 
# user's PAC from a service ticket. 
# This setting does not apply to PAC retrieve using S4U2Self protocol.
#
# There are 3 values: 
#   1. disabled (default)  NO PAC Validation will be done at all.
#   2. enabled             If PAC Validation fails, PAC is used and user login is allowed. 
#   3. enforced            If PAC Validation fails, PAC is discarded and user login is denied. 
#  
# Note that setting this to enabled/enforced will have significant impact on user login 
# and user's group fetch performance. 
# 
# Controlled by Group Policy under the settings
# "Computer Configuration"
#     -> "Centrify Settings"
#           -> "DirectControl Settings"
#                -> "Kerberos Settings"
#                     -> "Specify whether Kerberos PAC Checksum Validation should be done"
#
# krb5.pac.validation: disabled 
#



#
# If set to true, each Kerberos authentication for a given user, except the
# first will generate a unique ticket cache file name of the form:
#
#     krb5cc_cdc<uid>_XXXXXX
#
# where <uid> is the users Unix ID, and the XXXXXX is a unique set of characters
# (i.e. "krb5cc_cdc512_u0PSdt").  This allows a given user to be logged on more
# than once, without subsequent logoffs interfering with other logon instances.
#
# If set to false the old style name of krb5cc_<UID> is generated, and old
# versions of the file are overwritten. If a user is logged in twice,
# the first logout will cause the file to be deleted, leaving the other logon
# instance without a credential cache.
#
# The environment variable KRB5CCNAME is populated with the generated name.
#
# On Mac OS, the default value is false otherwise it is true.
#
# krb5.unique.cache.files:true


#
# By default, if Kerberos altSecurityIdentities exist for a user, we use it
# for authentication instead of the Windows name, regardless as to which of
# the two names was supplied.  This works as long as 1) The alternate name
# is always used or the passwords are synchronized and 2) The third-party KDC
# is reachable. If these conditions are not met, and Kerberos
# altSecurityIdentities exist, you can disable this feature, by setting this
# keyword to false. Then only the Windows name can be used to authenticate
# the user, and any Kerberos altSecurityIdentities are ignored.
#
# krb5.support.alt.identities: true

#
# Adclient uses CLDAP NETLOGON requests to discover its site as configured in
# Active Directory Sites and Services. Active Directory servers in the same
# site are preferred since they are likely the closest. 
#
# This keyword enables customers to override the site returned
# from AD. The default value (empty) instructs adclient to continue
# discovering sites using CLDAP.
#
# There are two types of site overrides:
#  . Universal site override - where an Active Directory forest is not
#    included in the keyword.
#  . Forest specific site overrides - where an Active Directory forest is 
#    included in the keyword.
#
# Forest specific site overrides take precedence over universal site overrides.
# With the two types of site overrides it is possible to override sites for
# all forests, specific forests, a combination of the two.
#
# The following is an example a universal site override that is applied
# to all forests that do not have a forest specific override.
#
# adclient.preferred.site: my-site.  
#
# The following is an example a forest specific site override for the
# forest acme.com.
#
# adclient.preferred.site.acme.com: my-acme-site
#

#
# Restrict DC and GC look ups to a configured site list.
# When adclient needs to connect to a DC or GC it executes the following steps:
#
#    1. Discover the preferred site
#
#    2. From DNS, get a list of DCs or GCs in the preferred site and attempt
#       to connect to each one until a connection is successful or the list
#       is exhausted.
#
#    3. If unable to connect to a DC or GC in the local site try to connect
#       to a DC or GC in any site.
#
# Administrators can restrict step 3 to a specific set of alternate sites
# to search for DCs or GCs by configuring this parameter with legal AD
# site names. Run Active Directory Sites and Services for this list.  The sites
# will be searched in list order.
#
# If the parameter is not configured then step 3 operates as described above.
# Do not add the preferred site to this list as it will be searched anyway.
#
# Use adinfo to determine the preferred site.
#
# adclient.lookup.sites: <site1> [site2] [site3] ...
#
# The parameter can also be configured with a domain suffix, so that only
# for certain domains will the site list be applied.
# Example:
#
# adclient.lookup.sites.acme.com: <site1> [site2] [site3] ...
#

#
# How often we attempt to re-establish ldap bindings to the
# preferred site after being forced to temporarily use
# non-preferred site ldap services (in minutes)
# 0 indicates no attempts
#
# adclient.binding.refresh.interval: 30
#

# How often adclient should wait before attempting to update
# the OS information in the case where adclient starts
# up in disconnected mode.
# adclient.update.os.interval: 30

#
# Indicate whether we force to re-establish ldap bindings
# regardless the current binding is closest site or not.
#
# Binding to a different domain controller in the same site
# periodically can help to facilitate load balancing between
# the domain controllers. After switching to a different
# domain controller, adclient has to rebuild its cache entirely
# from AD; and if there are many machines joined to a large
# domain, enabling this policy could have adverse impact
# on the domain controllers.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Force switching to different domain controller in the preferred site periodically"
#
# adclient.binding.refresh.force: false
#

# The maximum idle time of binding (in minutes)
#
# adclient.binding.idle.time: 5
#


#
# After a connection to a domain controller become unhealthy, the time (in minutes) to wait before 
# fail over to next available DC in the domain. 
# Before the failover, agent will attempt the reconnect to the same domain controller in the background. 
# Default is no delay for all domains, ie failover immediately. 
#
# To specify per domain failover delay setting, if not specify general setting is used:
#       adclient.binding.dc.failover.delay.<domain_name>: 0 m
# 
# adclient.binding.dc.failover.delay: 0 m 
# 

#
# Update of Group Policy can be disabled by setting the following value to
# true. If the "disable all" flag is set, the user and machine GP settings
# below will be ignored. Note that User GP update is disabled by default
# except on Mac OS X.
#
# gp.disable.all: false
# gp.disable.machine: false
# gp.disable.user: true (false for Mac OS X)
#

#
# Wait for machine group policy in the first login. The default is
# 15 seconds.
#
# gp.wait_for_machine_policy: 15
#

#
# This setting is to control how often user GP is being updated and
# executed at login time. The default value of once improves the
# performance of creating multiple login shells on the same machine.
# Other valid values are always and never. This does not affect
# periodic GP updates nor running `adgpupdate' directly.
#
# gp.user.login.run: once
#

#
# Ignore any user GP errors and allow login.
#
# gp.user.ignore_errors: true
#

#
# The amount of time to wait for a single Group Policy mapper to complete
# in seconds.  The default is 30 seconds and should be less than the value
# gp.mappers.timeout.all.
# 
# Note: On macOS, the default is 120 seconds.
#
# controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Group Policy Settings"
#               -> "Set group policy mapper execution timeout"
#
# gp.mappers.timeout: 30
#

#
# The amount of time to wait for the Group Policy mappers to complete
# in seconds.  The default is 4 minutes (240) (Note: On macOS, the default is 10 minutes - 600 seconds).
# This value should be less than the value of lrpc.timeout
#
# gp.mappers.timeout.all: 240
#

#
# The default umask for mappers creating files
#   u=rwx, g=rx, o=rx
#
# gp.mappers.umask:0022
#

# Group Policy mapper configuration for machine policies.  The
# gp.mappers.directory.machine parameter specifies the directory
# that contains mapper programs for machine group policies. The
# gp.mappers.machine parameter specifies the list of mappers to
# run.  A * means to run all the mappers that appear in the
# directory and are not listed explicitly, in ASCII sorted order.
#
# If one program must be run first and another last, use:
#
# gp.mappers.machine: first_mapper * last_mapper
#
# To prevent a mapper from running, either use chmod(1) to remove
# its execute permission, or set:
#
# gp.mappers.machine: !disabled_mapper *
#
# These settings controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Group Policy Settings"
#               -> "Set machine group policy mapper list"
#
# gp.mappers.directory.machine: /usr/share/centrifydc/mappers/machine
# gp.mappers.machine: *

#
# Group Policy mapper configuration for user policies.  The
# syntax is the same as for machine policy mappers.
#
# These settings controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Group Policy Settings"
#               -> "Set user group policy mapper list"
#   CentrifyDC Settings->Group Policy Settings
#
# gp.mappers.directory.user: /usr/share/centrifydc/mappers/user
# gp.mappers.user: *

# The program that runs the mappers as configured above.
# gp.mappers.runmappers: /usr/share/centrifydc/mappers/runmappers

# File where the gp error data will be written.
# gp.mappers.error_file: /var/log/centrify_mapper_error.log


# Directory where the registry for machine data will be written.
#
# gp.reg.directory.machine: /var/centrifydc/reg/machine
#

# Directory where the registry for user data will be written.
#
# gp.reg.directory.user: /var/centrifydc/reg/users
#








# lrpc: max time in seconds to wait for a adclient response.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set LRPC response timeout"
#
# lrpc.timeout: 300
#

# Amount of time, in seconds, which adclient will wait for a
# socket connection timeout during lrpc
#
# lrpc.connect.timeout: 5
#

# Amount of time, in seconds, which a client will keep the adclient
# connection open for context dependent requests (pwgetent, etc..)
# Lower this value reduces the chance of a multithreaded program
# being affected by an adclient restart at the risk of slow context
# dependent apps failing.  Increasing the value reduces
# the overhead of re-establishing a connection for multiple requests
#
# lrpc.session.timeout: 30
#



# optimal number of objects to obtain in a single ldap request
# There's a trade off here between speed and memory usage as well as
# bandwidth vs latency. Larger numbers may improve performance and
# increase memory usage.  Smaller numbers will use less memory.  This
# is mostly used for retrieving large groups (>1000 users).
# On fast networks, smaller numbers seem to be best
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Set LDAP fetch count"
#
# adclient.fetch.object.count: 100
#

# Amount of time in seconds to wait for sending a packet to socket during ldap binding
#
# ldap.send.timeout: 30
#

# Amount of time in seconds to wait for a response from socket during ldap binding
#
# ldap.recv.timeout: 30
#

#
# Specify dc and gc hostnames if your DNS isn't configured correctly
# for AD.  This is not recommended for production systems, since AD
# automatically updates DNS with failover and replica systems and optimizes
# for your site location.  This is provided mostly for evaluation systems
# which are using Unix DNS and can't add the _ldap and _gc service records
#
# dns.dc.<domain.name>: <hostname> [hostname] ...
# dns.gc.<domain.name>: <hostname> [hostname] ...
#
# Example:
# dns.dc.acme.com: anvil.acme.com cayote.acme.com
# dns.gc.acme.com: roadrunner.acme.com
#
# Note the hostname must resolve in DNS or be entered in /etc/hosts
#

#
# Comma separated list used when scanning for live DNS servers.
# A 't' means scan with TCP.  A 'u' means scan with UDP.
# The number that follows is the seconds to wait for a response.
# For each value, all known DNS servers are queried.
# Once one or more DNS servers respond, the fastest is chosen
# and the sweep stops.
# If the end of list is reached and no DNS servers responded,
# DNS is considered down.
# On Mac OS X, the default value is 2 UDP scans with a 1 second timeout.
#
# dns.sweep.pattern: t1,u1,u1,t2,u2,u2
#


#
# Amount of time to wait if DNS is down before triggering a DNS server sweep.
#
# dns.dead.resweep.interval: 60
#

#
# Amount of time to wait if DNS is active before triggering a DNS server sweep
# to see if any DNS servers are responding faster than our current one.
#
# dns.alive.resweep.interval: 3600
#

#
# DNS TCP/UDP retries and timeouts.
# Each value in the list specifies the timeout in seconds for that retry attempt.
# For UDP, the default value is 3 retries, with timeouts of 1, 2 and 4 seconds respectively. 
# On Mac OS X, for UDP, the default value is only 1 timeout of 1 second.
# For TCP, only one timeout value is specified.
# dns.tcp.timeout: 1
# dns.udp.timeouts: 1, 2, 4
#

#
# List of domain controllers that will be blocked (filtered out) when resolving
# through DNS. Useful when certain Domain Controllers are known to be
# inaccessible (e.g. behind a firewall, etc.) and shouldn't be contacted.
#
# Adding a DC to the dns.block list that adclient is already connected to will
# not break the current connection.  However dns.block DCs have precedence over
# domain controllers listed in kset files, i.e. DCs in the kset files will be
# ignored for selection if the DCs are also listed in the dns.block list.
#
# This parameter is controlled by Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Blacklist DNS DC hostnames"
#
# dns.block: fqdn, fqdn, ...

#
# The amount of time in seconds until a cached DNS response expires
#
# Note that dns.cache.timeout replaces the deprecated adclient.dns.cache.timeout keyword.
#
# dns.cache.timeout: 300
#







#
# This will force DNS subsystem to try all live DNS
# servers until either the lookup succeeds or the list is exhausted.
# It helps in cases where the DNS servers do not all hold the same
# records.
#
# Default value is true.  Set to false if DNS subsystem should stop
# after the first record not found response.
#
# dns.query.all.servers: true
#





#
# When scanning for live domain controllers.
# What is the sequence of timeouts in seconds that should be used for a fast sweep.
# Fast sweep is used when an answer is more important than deep discovery.
#
# dc.fast.sweep.pattern: 0.1, 0.5, 1.0, 2.0
#

#
# When scanning for live domain controllers.
# What is the sequence of timeouts in seconds that should be used for a deep sweep.
#
# dc.deep.sweep.pattern: 1.0, 2.0, 5.0, 10.0
#

#
# How long to keep the cached the fact that a DC is dead.
#
# dc.dead.cache.refresh: 60
#

#
# How long to keep the cached the fact that a DC is alive.
#
# dc.live.cache.refresh: 3600
#



# Specify the maximum number of servers Centrify DirectControl Agent should
# try to connect to when the default domain controller is down before
# deciding to run in disconnected mode.
#
# This policy is used if the agent is unable to connect to its primary domain
# controller. If enabled, adclient will query DNS for a list of other domain
# controllers and try each server in the list up to the maximum number of
# servers you specify. For example, if you have a large number of replica
# domain controllers for a given domain, you may want to use this parameter
# to limit the number of servers for the agent to try to connect to in order
# to limit network traffic and improve performance.
#
# The value should be a positive integer or 0. 0 means adclient will try to 
# connect all domain controllers in the list one by one until connected to one
# of the servers successfully. The default value is 0.
#
# This policy is ignored if you have defined a master domain controller for
# the zone the computer is a member of. If you have specified a master domain
# controller, the computer only connects to that domain controller.
# 
# Note: this parameter was deprecated since 4.4.3 in adclient and resurrected
# in 5.1.0.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set maximum server connection attempts"
#
# adclient.server.try.max: 0
#

#
# How long to keep the cached the fact that a domain is dead (no live DCs).
#
# domain.dead.cache.refresh: 60
#

#
# How long to keep the cached the fact that a domain is alive.
#
# domain.live.cache.refresh: 3600
#

# The maximum timeout of UDP binding.
# Note ldap requests are retried twice before the agent decides we are
# disconnected.  On the second request, this value is doubled.
#This parameter is controlled by Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set UDP timeout"
#
# adclient.udp.timeout: 15
#

#
# Specify whether adclient will be allowed to dump core.  Overrides the
# default ulimit setting.  Valid values are:
#
# never         Never dump core.
# once          Dump core only when there is no existing core dump file.
#               Note: On Mac OS X, 'once' behaves the same as 'always', which will
#               dump core on every crash.
# always        Dump core on every crash.
#
# adclient.dumpcore: once
#
#adclient.dumpcore: always

#
# Specify how long (in seconds) adjoin should wait for adclient
# to create its LRPC socket, and how often (in milliseconds)
# to check.
#
# adjoin.adclient.wait.seconds: 60
# adjoin.adclient.poll.ms: 500
#

#
# adjoin uses this value to generate the pre-win2k host name
# by truncating the host name and to determine how it should create its
# computer account in Active Directory.
#
# This value defaults to 15 as that is the maximum host name size allowed by
# the NetLogon service that adclient prefers to use for NTLM pass-through
# authentication.  NetLogon is fast and automatically returns a user's
# group membership.
#
# However this value can be configured for up to 19 characters. In this case
# adclient will use slower NTLM authentication methods, and will use additional
# LDAP searches to fetch the user's group membership.
#
# If the adjoin option -N is used to specify the pre-win2k host name, this
# configuration parameter is not used for that function.
#
# If the computer's host name size exceeds this value, adjoin will use LDAP
# (and require administrative  privileges) to create computer accounts,
# instead of MS-RPC.  Regardless, if the computer's short host name exceeds
# 19 characters, then it is no longer possible to create computer accounts
# via MS-RPC methods and LDAP must be used.
#
# adjoin.samaccountname.length: 15

#
# Set adclient.samba.sync to true, and CentrifyDC will attempt to
# interoperate with Samba if:
#
#    Samba binaries are found under the path specified in samba.base.path.
#    Samba's version matches the version specified in samba.version
#    Samba is configured for ADS security
#    Samba belongs to the same REALM as CentrifyDC
#    Samba and CentrifyDC share an Active Directory Computer object.
#
# Set adclient.samba.sync to false to force CentrifyDC to ignore Samba.
#
# adclient.samba.sync: true
#

#
# The following specifies our supported Samba base path
# These parameters have no effect if adclient.samba.sync is false
#
# samba.base.path: /opt/centrify/samba

#
# There are 2 methods that DirectControl can use to sync a machine's password to Samba, which are:
#    1. Use libtdb APIs to set machine password for Samba.
#    2. Use the "net changesecretpw" CLI to set machine password for Samba.
# By default, DirectControl uses libtdb.so API to set machine password to Samba.
# Set this setting to false if you want DirectControl to use the "net changesecretpw" CLI
# to set the machine password for Samba.
# The parameter only takes effect when adclient.samba.sync is true.
#
# samba.interop.uselibtdb: true

#
# Normally DirectControl can find the libtdb shared object library on its own.
# If this fails, DirectControl will use this parameter to locate it.
# The parameter only takes effect when adclient.samba.sync is true.
#
# samba.libtdb.path: /opt/centrify/samba/lib/samba/libtdb.so
#



#
# Allow the DirectControl agent to query trusted domains and forests for
# transitive trust information.  This is used to generate a proper krb5.conf
# file and allow cross forest users to authenticate.  Disable only if your
# trust configuration is out-of-date or does not match your network or
# firewall configuration"
#
# This parameter is controlled by the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Enable LDAP cross-forest search"
#
# adclient.ldap.trust.enabled: true
#

#
# The number of seconds to wait for responses from external forests and
# trusted domains when attempting to determine trust
# relationships.  If you access external forests through slow
# links, this parameter may need to be increased.
#
# This parameter is controlled by the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set LDAP trust timeout"
#
# adclient.ldap.trust.timeout: 5
#


#
# Avoid sending network queries to outbound trusts that do not have any 
# centrify-zoned users
#
# Default value is false
#
# adclient.skip.unused.outbound.trusts: false
#

#
# Avoid sending network queries to inbound trusts. If it is true, all
# inbound trusts will not be built into domaininfomap.
#
# Default value is false
#
# adclient.skip.inbound.trusts: false
#

# 
#
# A list of space-separated AD domain names in dotted format
# that will be excluded from the trusted domain map. For example:
# The default is an empty list
#
# adclient.excluded.domains: anvil.acme.com cayote.acme.com
#

#
# A list of space-separated AD domain names in dotted format.
# If non-empty only domains in this list (and the joined domain)
# will be included the trusted domain map. For example:
# The default is an empty list
#
# adclient.included.domains: anvil.acme.com cayote.acme.com
#





#
# How often should the daemon check for free disk space?
# Default is 5 minutes.  0 means disabled.
# Note that this value also affects the recovery from low disk space mode.
# 0 disables recovery and adclient will not return to normal mode.
#
# adclient.disk.check.interval: 5
#

#
# Specify data directory free space in KB that adclient should generate a
# warning message.  This checking of freespace runs periodically with
# interval specified in adclient.disk.check.interval.
# Default is 51200 KBytes.  0 means "do not generate warning message".
# Note that this value also affects the recovery from low disk space mode.
# Recovery only starts if the freespace is larger than the warning level.
#
# adclient.disk.check.free: 51200
#

#
# Merge local group membership from /etc/group into the Centrify group
# response for groups with the same name and gid.  This violates the NSS
# interface behavior and may have unexpected side effects, so it is
# disabled by default. You must run adreload to detect changes
# in the local group file.
#
# adclient.local.group.merge: false
#

#
# The time difference of the host and domain. If it less than 5min, call the
# adjtime function to update the host time, otherwise call the settimeofday function
# to update host time.
# Default is 5 minutes.
#
# adjust.offset.time: 5
#

#
# The amount of time in minutes adclient will cache access control
# information before refreshing the data from Active Directory.
# Access control information is used to store authorization information
# used by dzdo, dzsh, and pam and potentially third party applications.
# Default is 30 minutes.
#
# After access control information is refreshed, if local account management
# feature is enabled, the local account profiles will be refreshed immediately
# after that. Hence, this parameter is also used in controlling sync interval of
# local account profiles from Active Directory to local passwd or group files. 
#
# This parameter is controlled by the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set refresh interval for access control cache"
#
# Note: This string replaces the deprecated adclient.azman.refresh.interval
#
# adclient.refresh.interval.dz: 30

#
# Enable DirectAuthorize capabilities.   The default is true.
#
# dz.enabled: true

#
# If true, dzdo will set the HOME environment variable to the home
# directory of the target user (implies dzdo -H).
# Default is false.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Force dzdo to set HOME environment variable"
#
# dzdo.always_set_home: false
#

#
# If true, and dzdo is run with the -s option, the HOME environment
# variable will be set to the home directory of the target (-u) user.
# Makes -s imply -H.  Default is false.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Force dzdo to set HOME environment variable when runs with '-s' option"
#
# dzdo.set_home: false
#

#
# Environment variables to check for % or / characters in the value and
# remove from the user's environment. The variables are removed whether
# or not the Reset environment variables option is selected in the command
# if they are found to have % or / characters.
# The default list of variables to check is displayed when 'dzdo -V' is run
# as root. This list can be replaced using dzdo.env_check as in the
# following example.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Set environment variables to be removed by dzdo with characters % or /"
#
# dzdo.env_check: COLORTERM,LANG,LANGUAGE,LC_*,LINGUAS,TERM,TZ
#

#
# Environment variables to preserve or keep.
# When a command's 'Reset environment variables' is enabled in the UI, the
# user's environment variables will be reset to HOME, SHELL, LOGNAME, USER,
# USERNAME, TERM, PATH, SUDO_COMMAND, SUDO_USER, SUDO_UID, and SUDO_GID.
# Variables specified in the command's 'Keep environment variables' will be
# preserved in addition to a default list of variables which is displayed
# when 'dzdo -V' is run as root.  This default list can be replaced using
# dzdo.env_keep as in the following example.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Set environment variables to be preserved by dzdo"
#
# dzdo.env_keep: COLORS,DISPLAY,HOSTNAME,KRB5CCNAME,LS_COLORS,PATH,PS1,PS2,XAUTHORITY,XAUTHORIZATION,DA_SESSION_ID,DA_SESSION_ID_AUTH
#

#
# Default environment variables to remove.
# When a command's 'Reset environment variables' in the UI is NOT enabled,
# variables specified a command's 'Remove environment variables' are
# removed in addition to a default list of variables to remove.
# The default list of variables to remove is displayed when 'dzdo -V' is run
# as root. This list can be replaced using dzdo.env_delete as in the
# following example.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Set environment variables to be removed by dzdo"
#
# dzdo.env_delete: IFS,CDPATH,LOCALDOMAIN,RES_OPTIONS,HOSTALIASES,NLSPATH,PATH_LOCALE,LD_*,_RLD*,SHLIB_PATH,LDR_*,LIBPATH,AUTHSTATE,DYLD_*,KRB_CONF*,KRBCONFDIR,KRBTKFILE,KRB5_CONFIG*,KRB5_KTNAME,VAR_ACE,USR_ACE,DLC_ACE,TERMINFO,TERMINFO_DIRS,TERMPATH,TERMCAP,ENV,BASH_ENV,PS4,GLOBIGNORE,SHELLOPTS,JAVA_TOOL_OPTIONS,PERLIO_DEBUG,PERLLIB,PERL5LIB,PERL5OPT,PERL5DB,FPATH,NULLCMD,READNULLCMD,ZDOTDIR,TMPPREFIX,PYTHONHOME,PYTHONPATH,PYTHONINSPECT,PYTHONUSERBASE,RUBYLIB,RUBYOPT
#

#
# If dzdo cannot find a command in the users PATH, it will (by default)
# indicate this to the user with an error statement. Some sites may wish to
# avoid this to obfuscate whether the command was prevented, or simply
# not found. When set to true dzdo will indicate if a command could not
# be found. Default is true.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Prompt error message if command not found by dzdo"
#
# dzdo.path_info: true
#

#
# Controls whether a short lecture is printed before the password prompt.
# Possible values are 'once', 'never' and 'always'.  Default is 'once'.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Show lecture by dzdo before password prompt"
#
# dzdo.lecture: once
#

#
# By default dzdo's lecture is built-in.  However, it can be read from a file
# specified by the dzdo.lecture_file option, which should contain the full path
# to a text file.
# Default is empty (use built-in lecture).
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Set lecture shown by dzdo before password prompt"
#
# dzdo.lecture_file:
#

#
# By default, dzdo stores an authentication ticket once per user.
# Enabling this option causes dzdo to require authentication once per-tty.
# Default is off.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Force per tty authentication in dzdo"
#
# dzdo.tty_tickets: false
#

#
# Specify whether dzdo will run only when the user is logged in to a real tty.
# Enabling this will make dzdo can run only from a login session and
# not via other means such as cron(8) or cgi-bin scripts.
# Default is off.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Require user is logged in to a real tty to run dzdo"
#
# dzdo.requiretty: false
#

#
# The message displayed when a user fails to authenticate correctly.
# Default is "Sorry, try again."
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Set error message when failed to authenticate in dzdo"
#
# dzdo.badpass_message: "Sorry, try again."
#

#
# The password prompt format when the target user's password is needed.
# Default is "[dzdo] password for %p:"
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Set password prompt for target user password in dzdo"
#
# dzdo.passprompt: "[dzdo] password for %p:"
#

#
# The directory where dzdo stores timestamp files, default is /var/run/dzdo
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Set directory to store user timestamp by dzdo"
#
# dzdo.timestampdir: /var/run/dzdo
#

#
# The number of minutes between operations during which a dzdo user need not
# re-authenticate.  Default is 5 minutes.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Set dzdo authentication timeout interval"
#
# dzdo.timestamp_timeout: 5
#

#
# The number of minutes before the dzdo password prompt times out.
# Default is 5 minutes.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Set dzdo password prompt timeout interval"
#
# dzdo.passwd_timeout: 5
#

#
# By default, dzdo logs both valid and invalid command execution.
# Disabling it will cause dzdo to log only invalid command execution.
# Default is true.
# Note - these messages are written to the syslog auth (or authpriv) facility;
# that means that these messages (good and bad) typically go to /var/log/secure
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Enable logging of valid command execution in dzdo"
#
# dzdo.log_good: true
#

#
# Whether to require to specify the runas user in dzdo use. 
# Default is true.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Require runas user for dzdo"
#
# dzdo.set.runas.explicit: true
#

#
# Specify the full path of dzdo validator.
#
# Dzdo validator is a customized executable program or script, which is called
# by dzdo to perform validation check before running privileged commands. The
# customized validator program or script must return zero for success, non-zero
# for failure. Validator will take AD user name (user@domain
# format), command, run as user, run as group and dzdo role, that he/she is
# trying to execute. All these information can be configured through environment
# variables DZDO_USER, DZDO_COMMAND, DZDO_RUNASUSER, DZDO_RUNASGROUP
# and DZDO_ROLE respectively.
#
# Dzdo only trusts and runs the validator owned by root and not group/world
# writable. When the return value of validator is non-zero, dzdo will not
# execute the privileged command. Dzdo will not print any message to console or
# log about the validation result. Validator should log its messages by itself.
#
# When the validator is not available or not trusted, dzdo will ignore the
# validator, and continues to run the privileged command by default. We can
# alter this behavior by configuring parameter dzdo.validator.required. When
# enabled, dzdo will not execute the privileged command if the validator is not
# available or not trusted.
#
# The dzdo validator is located at /usr/share/centrifydc/sbin/dzcheck by default.
# This file is non-exist upon installation. A sample script is provided at
# /usr/share/centrifydc/sbin/dzcheck.sample for your reference.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Set dzdo validator"
#
# dzdo.validator: /usr/share/centrifydc/sbin/dzcheck
#

#
# Specify whether to enforce the validation check for dzdo privileged commands.
#
# If dzdo validator exists and is trusted, then whether to execute privileged
# commands or not depends on the result of dzdo validator (which in turn
# configurable by parameter dzdo.validator).
#
# If dzdo validator does not exist or is not trusted, then whether to execute
# privileged commands or not depends on this parameter. When disabled, dzdo will
# execute the privileged commands. When enabled, dzdo will not execute the
# privileged commands.
#
# Default value is false.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Require dzdo command validation check"
#
# dzdo.validator.required: false
#

#
# If set to true, the user may specify a timeout on the command line with -T option. 
# If the timeout expires before the command has exited, the command will be terminated.
# 
# Default is false.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Enable user command timeout"
#
# dzdo.user.command.timeout: false
#

#
# Specify whether to add anchors automatically to the regex in DZ command.
# It is mainly used to avoid undesired matching if the regex is not anchored
# correctly, e.g. regex = "ls" would matches with lsof.
#
# If true, start anchors(^) and end anchors($) are always added to avoid
# undesired matching of commands.
# If false, the regex would keep intact, and user shall be careful of all the
# possible matches for the regex set.
#
# Default value is true.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Always add anchors to regex in dzdo and dzcmds"
#
# dz.auto.anchors: true
#

#
# The default match path for dzdo and dzsh commands
#
# dz.user.path: "/bin:/usr/bin:/usr/local/bin"
# dz.system.path: "/sbin:/usr/sbin:/usr/local/sbin"
#

#
# The name of the Operating System in the Active Directory computer object
# This field is dynamically determined, but can be overridden here if desired
# Changing this parameter requires a restart of adclient
#
# adclient.os.name: <dynamically determined by uname>
#
#

# The version of the Operating System in the Active Directory computer object
# This field is dynamically determined, but can be overridden here if desired
# Changing this parameter requires a restart of adclient
#
# adclient.os.version: <dynamically determined by uname>
#

#
# Allow computer principals to be treated as users with login capabilities
# when added to the zone.   This is required to support DFS with samba.
# This may incur a performance penalty in domains with heavily loaded
# servers or large user and computer populations
#
# adclient.user.computers: true
#

#
# addns is Centrify's dynamic dns update command line utility.  It can be invoked
# automatically be adclient during startup and in response to a network change
# signal. Network change signals are currently only supported by the Macintosh.
#
# Use this key to control whether or not addns will be invoked by adclient.
# The default setting on the Macintosh is true.
# For all other platforms the default setting is false.
#
# Note: Not supported for express mode.
#
# adclient.dynamic.dns.enabled: true  (default setting for Mac)
# adclient.dynamic.dns.enabled: false (default setting for platforms other than Mac)


#
# ADDNS TCP timeout.
#
# This is the amount of time in seconds addns will wait for responses to
# its update requests.
#
# addns.tcp.timeout: 7

#
# Periodically update the DNS records for this host.
# By default this feature is disabled because it is set to zero seconds.
# To enable this feature put the number of seconds between refresh attempts.
#
# Note: Not supported for express mode.
#
# adclient.dynamic.dns.refresh.interval: 0

#
# The following key controls the command line options used if adclient is
# configured to invoke addns.
#
# The default is /usr/sbin/addns -U -m
# To force addns to update the records even if they have not changed,
# add a --force to the command line
#
# Note! For some systems it is necessary to include your DNS domain name
# on the addns command line.
#
# Refer to addns documentation for command option details.
#
# adclient.dynamic.dns.command: /usr/sbin/addns -U -m --verbose

#
# Specify the minimum free disk space in KB that required for
# Group Policy update. If free disk space of any folder specified
# in gp.disk.space.check.folders is lower than this value, then
# Group Policy settings will not be updated.
# Default is 5120 KBytes.  0 means "do't check free disk space".
#
# gp.disk.space.min: 5120
#

#
# Specify the folders that need to check free disk space. If free
# space of any specified folder is lower than the value specified
# in gp.disk.space.min, then Group Policy settings will not be updated.
# Default is "/,/etc,/var".
#
# gp.disk.space.check.folders: /,/etc,/var
#

#
# Generally, We will check the /<user home directory>/.setgrpsrc file
# when adclient getting user's group IDs.
# If this option is set to true, adclient will not check the .setgrpsrc
# file and act as there's not this file
#
# The default is false
#
# adclient.ignore.setgrpsrc: false
#

# Specify whether adclient should parse the netgroup data for adnisd, or
# if adnisd should do the parsing itself.   If Active Directory groups are
# being used as netgroups, then adclient must do the netgroup parsing for
# adnisd.   This may result in slightly different map output for maps with
# poorly formatted groups or triples.   The default is to auto-detect whether
# AD groups are being used in netgroups and only enable adclient parsing in
# that case.
#
#   adclient.parse.netgroup: <auto>
#

#
# If Active Directory groups are used in netgroup memberships, adclient will
# automatically generate a netgroup called "groupname<replacement>domain.name"
# where the replacement text replaces the '@' character typically used in a
# Active Directory group specification.  By default this is the string "-at-"
# resulting in names like "groupname-at-domain.name" but can be changed
# if this naming convention presents a potential conflict with an existing
# group name
#
#  adclient.netgroup.at.replacement: -at-
#

# If adclient cannot get password expire value of an user from Active Directory
# under some circumstances, it will set the password expire as never expire when
# adclient.unknown.password.expire is true. The default is false, meaning using
# the previously cached value which may be incorrect.
#
# adclient.unknown.password.expire: false
#

#
# This parameter tells adclient to allow "unknown" kerberos realm as UPN suffix.
#
# Note:
#    1) This parameter can be a list of alternate UPN suffixes (separated by <space>).
#    2) This parameter does not support wildcards (*.acme.com) or preceding dots (.acme.com).
#
# adclient.altupns: mil
#


# This setting is to control whether OS version prefix (6.1:) is added
# 1 add prefix only at FIPS mode
# 2 add prefix at both FIPS and non-FIPS mode
# Default is 2
#
# adclient.os.version.use.win7prefix: 2
#










#
# Control whether the multi-threads reentrancy check will be performed in Capi calls.
#
# capi.reentrant.check: false

#
# Controls whether the in-memory CAPI SID cache is enabled.  
# If true SID lookups will be cached in the CAPI library in process memory.
# Default value is: false
#
# capi.cache.enabled: false
#

#
# If the in-memory CAPI SID cache is enabled, this parameter controls
# the number of seconds  a positive cached SID object will remain in the
# in-memory SID cache before it will be refreshed.
# Default value is: 3600 seconds
#
# capi.cache.ttl: 3600
#

#
# If the in-memory CAPI SID cache is enabled, this parameter controls
# the number of seconds  a negative cached SID object will remain in the
# in-memory SID cache before it will be refreshed.
# Default value is: 300 seconds (5 minutes)
#
# capi.cache.negative.ttl: 300
#

#
# If the in-memory CAPI SID cache is enabled, this parameter controls 
# the maximum number of objects that will be kept in the cache.  If
# the number is exceeded, then cached objects that have not been accessed
# for a while will be replaced with the new objects
# Default value is: 10000 objects
#
# capi.cache.max.objects: 10000
#

#
# If the in-memory CAPI SID cache is enabled, this parameter controls 
# the number of hash map buckets that will be allocated.  
# See the following web site for examples of good hash map table sizes
#  http://planetmath.org/goodhashtableprimes
# Default value is:  769 buckets
#
# capi.cache.hash.table.size: 769
#

#
# If the in-memory CAPI SID cache is enabled, this parameter controls 
# the number of seconds between log events that dump useful information
# about the performance of the cache. 
# The summary information (hits, misses, etc.) are DEBUG level events.
# Details about the bucket distributions are TRACE level events.
# An interval of 0 disables the hash map log dumps
# Default value is: 0
#
#capi.cache.log.interval: 0
#


#
# These settings force sudo and dzdo re-authentication when relogin.
#
# When users authenticate with sudo once, a ticket will be temporarily created
# per tty. This ticket allows sudo commands to run without re-authentication in
# a short period (e.g. 5 minutes), and this ticket will be re-used when user
# login again. The same behavior is applied to dzdo.
#
# If these settings are enabled, the tickets will be removed when user logout.
# Thus users are forced to authenticate again once relogin and call sudo (or
# dzdo). Default is false, i.e. sudo and dzdo tickets are not cleared when user
# logout.
#
# Note:
# 1. A new flag called tty_tickets has been added since Sudo version 1.7.4. If
# set, users must authenticate on a per-tty basis. With this flag enabled, sudo
# will use a file named for the tty the user is logged in on in the user's time
# stamp directory. If disabled, the time stamp of the directory is used instead.
# This flag is on by default. To disable this re-authentication feature, we need
# to disable this parameter and set e.g. "Defaults !tty_tickets" in sudoers
# file.
# 2. This parameter will only clear ticket files under /var/run/sudo by
# default. However, on some platforms, sudo will store the ticket files to other
# directories instead (i.e. /var/db/sudo). In this case, we can configure
# parameter adclient.sudo.timestampdir so Centrify DirectControl Agent will
# clean up path other than the default /var/run/sudo.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Sudo Settings"
#               -> "Force sudo re-authentication when relogin"
#            -> "Dzdo Settings"
#               -> "Force dzdo re-authentication when relogin"
#
# adclient.sudo.clear.passwd.timestamp: false
# adclient.dzdo.clear.passwd.timestamp: false

# The directory where sudo stores timestamp files, default is /var/run/sudo
# make sure it's the same as the value of timestampdir in etc/sudoers
# adclient.sudo.timestampdir: /var/run/sudo
#

# The option to not output the role switch info in dzsh use, default is output.
# dzsh.roleswitch.silent: false
#

# The option to use realpath(3) for dzdo to canonicalize the command path 
# before checked against DZ commands, default is not used.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Use realpath to canonicalize command paths in dzdo"
#
# dzdo.use.realpath: false
#

# Path used for every command run from dzdo, like 'secure_path' option
# in sudoers but used only in command executing. Default is not set.
#
# You can also use a file to specify path, and the lines in file 
# shall contain only path values split by colons, for example:
# file:/etc/centrifydc/dzdo.secure_path
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Set secure paths for command execution in dzdo"
#
# dzdo.secure_path:
#

# Path used for every command run from dzdo, like 'secure_path' option
# in sudoers but used only in command searching. Default is not set.
#
# You can also use a file to specify path, and the lines in file 
# shall contain only path values split by colons, for example:
# file:/etc/centrifydc/dzdo.search_path
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Set paths for command searching in dzdo"
#
# dzdo.search_path:
#



#
# Specify the place of command alias map file.
# The format of this map is: alias: <command_path> [arguments]. Every item will
# be delimited by new-line character.
# Default value is /etc/centrifydc/dzdo.commandalias.map
#
# dzdo.command_alias: /etc/centrifydc/dzdo.commandalias.map
#

#
# Specify whether dzedit will check the directory permissions.
# If set to true, dzedit will check all directory components 
# of the path to be edited for writability by the invoking user. 
# Symbolic links will not be followed in writable directories 
# and dzedit will refuse to edit a file located in a writable directory.
# These restrictions are not enforced when dzedit is run by root. 
# On some systems, if all directory components of the path to be edited 
# are not readable by the target user, dzedit will be unable to edit the file.
# Default value is true.
#
# dzdo.edit.checkdir: true
#

#
# Specify whether dzedit will follow symbolic link.
# Default value is false, which means dzedit will 
# refuse to edit the symbolic link file.
#
# dzdo.edit.follow: false
#


#
# Specify whether to skip sending Trusted path related audit trail events to DirectAudit when DirectAudit is configured as Audit Trail targets.
# Default value is true
#
# audittrail.Centrify_Suite.Trusted_Path.machinecred.skipda: true
#

# Audit Trail targets.  A bit mask that specifies where audit trails will
# be delivered.  The bit values are:
#   1 - DA
#   2 - syslog
#
# Multiple targets can be specified at the same time.
#
# If DirectAudit 3.2 or later is installed, the default value is 3 
# (syslog and DirectAudit).  Otherwise, the default value is 2 (syslog only). 
# A value of 0 disables audit trail.
#
# audittrail.targets: 2
#

# To support separate target settings for different product/category
# (here, the catergory is also called component)
# by adding following settings to centrifydc.conf:
#
# audittrail.<product>.<component>.overrides
# audittrail.<product>.<component>.targets
#
# If there is space char in product/component name, should replace it with '_'
#
# For component overrides and targets setting, the bit mask is same with audittrail.targets.
#
# For component overrides setting, the default value is 0, means no target is override.
#
# audittrail.<product>.<component>.overrides: 0
#
# For component targets setting, there's no default value.
#



# Whether to allow user login when user account is locked out and the machine 
# is in disconnected mode.
#
# Default: false 
#
# This parameter is controlled by the Group Policy
#
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Login Settings"
#               -> "Allow offline login when user account is locked out"
#
# secedit.system.access.lockout.allowofflinelogin: false
#

# This policy setting lets you allow certificates without an Extended Key Usage (EKU) 
# set to be used for SmartCard logon.
#
# If you enable this policy setting, certificates with the following attributes 
# can also be used to log on with a smart card:
#  - Certificates with no EKU
#  - Certificates with an All Purpose EKU
#  - Certificates with a Client Authentication EKU
#
# If you disable or do not configure this policy setting, only certificates that 
# contain the smart card logon object identifier can be used to log on with a smart card.
# This policy parameter lets you allow certificates without an Extended Key Usage
# (EKU) set to be used for SmartCard logon.
#
# Default: false
#
# This parameter is controlled by the Group Policy
#       "Computer Configuration"
#       -> "Administrative Template"
#           -> "Windows Components"
#               -> "Smart Card"
#                   -> "Allow certificates with no extended key usage certificate attribute"
#
# smartcard.allow.noeku: false
smartcard.allow.noeku: true


#
# Use user credential to retrieve user policy.
#
# By default, user policy is retrieved using machine credential.
# If computer object has no permission to access user group policy
# object, user policy will not be applied.
#
# To use user credential to retrieve user policy, set this parameter
# to true.
#
# Default is false.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Group Policy Settings"
#               -> "Use user credential to retrieve user policy"
#
# gp.use.user.credential.for.user.policy: false
#

# Allow kerberose library to block a local user to single sign on
# with .k5login, the default is true.
#
# krb5.sso.block.local_user: true

# Specify whether CDC k5login module should ignore .k5login for SSO.
# The default is false.
#
# krb5.sso.ignore.k5login: false

# Manage which service accounts will be renewed automatically.
#
# You may specify a file name with a list of service account in the file.
# adclient.krb5.cache.renewal.service.accounts: file:/path/xxx.lst
#
# Or specify a list of service account.
# adclient.krb5.cache.renewal.service.accounts: <service account1>, <service account2>
#
# The default value is "file:/etc/centrifydc/service_accts.lst
# adclient.krb5.cache.renewal.service.accounts: file:/etc/centrifydc/service_accts.lst
#

# Specify whether to enforce local "Logon Hours" restriction check.
# The default is true.
#
# Controlled by Group Policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Enable logon hours local enforcement"
#
# adclient.logonhours.local.enforcement: true

# Infinitely reissue/renew the Kerberos credentials even after user has logout.
#
# Specify list of users whose Kerberos credentials required infinite renewal even after user has logout, 
# these users must be zone enabled (do not support mapped user). 
# krb5.cache.infinite.renewal.batch.users: <unixname> <upn> <samaccountname> <samaccountname@domain> 
# The default value is EMPTY.
#
# Controlled by Group Policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Specify users to infinitely renew Kerberos credentials"
#
# krb5.cache.infinite.renewal.batch.users:
#              
# Specify AD group that contain users whose Kerberos credentials required infinite 
# renewal even after user has logout, support AD group name only.
# krb5.cache.infinite.renewal.batch.groups: <adgroup samaccountname@domain> 
# The default value is EMPTY.
#
# Controlled by Group Policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Specify groups to infinitely renew Kerberos credentials"
#
# krb5.cache.infinite.renewal.batch.groups: 



#
# Custom user home directory creation script
#
# By default, CentrifyDC uses mkdir to create home directory.
# You can specify a script on how the user's home directory should be created. 
#
# The script should be:
#  - root own , only writable by owner.
#  - executable
#  - not sym link 
# 
# Also, the script needs to accept 3 arguments:
#  -h <home directory path>,
#  -u <uid for the home>,
#  -g <gid for the home>,
#
# If create home directory successfully, the script should exit with 0.
# Or else, it should exit with 1.
#
# A sample script is provided at /usr/share/centrifydc/samples/homedir.sh.sample for your reference.
#
# If pam.homedir.create.hook is set with the full path of the script, CentrifyDC will 
# invoke the script with the 3 arguments to create the home directory.
#
# pam.homedir.create.hook:



# Specify if Centrify DirectControl should manage local user and local group 
# account on the system. When this is set to true, adclient get the local 
# user and local group profiles from the zone, and update local passwd and 
# local group files according to the information defined in the zone. 
#
# The default value is false, which means adclient will not manage local 
# accounts on the system. Note that in the previous Centrify DirectControl 
# Agent version 5.3.0, the default value is true.
#
# This parameter is controlled by the Group Policy: 
#   "Computer Configuration"
#      -> "Centrify Settings" 
#         -> "DirectControl Settings"
#            -> "Local Account Management"
#               -> "Enable local account management feature"
#
# adclient.local.account.manage: false

# Specify if Centrify DirectControl manage local user and group in strict enforcement mode.
# When this general setting is set to true, 
# adclient will remove all unmanaged local users and groups except "root" from local files.
#
# The default value is false, which means NOT in strict enforcement mode.
#
# adclient.local.account.manage.strict: false

# More specific setting for user or group.  
# If not specified for a specific setting, the general setting is used
#
# adclient.local.account.manage.strict.passwd: false
# adclient.local.account.manage.strict.group:  false

# When UNIX agent successfully sync the local user account profile in zone to local passwd file,
# there could be new local users added, or there could be local users are changed to disabled/locked,
# changed from disabled/locked to enable/unlocked or removed local user accounts. 
#
# When this happens, customer may want to be able to set the password for these users 
# or even notify the password vault about these local users, and do something about it, 
# e.g. manage or unmanaged the password for these users. 
#
# This property is to achieve this, a cli can be configured in centrifydc.conf.
# When configured, UNIX agent will invoke this cli in another process and 
# pass the comma separated unixname list to the cli for further processing.  
#
# The default value is EMPTY
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Local Account Management"
#               -> "Notification Command Line"
#
# adclient.local.account.notification.cli:








#
# Need to expire the cache after changing these 2 controls and adreload.
# Disallow unix user name to exceed system platform login name max
# Default is false (allow).  This control only applies to hierarchical zone.
# adclient.user.name.max.exceed.disallow: false
#
# This setting is to define a certificate list,
# which will be included in certgp.pl install if found.
#
# The default value is empty
#
# It can be a list of certificates to be added.
# gp.mappers.certgp.pl.additional.cafiles: <ca-file> <ca-file> ...
#
# It can also point to a file, which contains a list of certificate files
# to be added.
# gp.mappers.certgp.pl.additional.cafiles: file:/etc/centrifydc/cert_included.list

# This setting is to define a certificate list,
# which will be excluded in certgp.pl install if matched.
#
# The default value is empty
#
# It can be a list of fingerprints of the certificates to be excluded.
# gp.mappers.certgp.pl.exclude.cacerts: <fingerprint> <fingerprint> ...
#
# It can also point to a file, which contains a list of fingerprints 
# of the certificates to be excluded.
# gp.mappers.certgp.pl.exclude.cacerts: file:/etc/centrifydc/cert_excluded.list


# Specify the timeout in seconds of probing tcp port.
# Default is 10
#
# adclient.tcp.connect.timeout: 10

# Specify a per machine delay (random delay), in minutes, for cache refresh background tasks.
#
# When there are many machines joined to same domain, and all these machines
# happen to schedule background task to frequently access AD at the same time,
# the convergence of such activities will cause AD very busy. If stagger those 
# activities, then we may avoid this convergence.
#
# Once defined, scheduling of those background tasks calculates a random period 
# of time within the interval and adds the same time to the delay of those tasks. 
# If you change the interval setting, the period of time is recalculated, and it 
# only takes effect for the new scheduled background tasks.
# 
# The default setting is 0 and no delay.
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Specify a per machine delay (random delay) for cache refresh background tasks"
#
# queueable.random.delay.interval: 0

# Configure alternative kcm server's socket path.
#
# 1. If not configured or configured with empty value,
#    fall back to use default socket path /var/run/.centrify-kcm-socket
#
# 2. If configured with non-empty value, and
#    2.1 if krb5.conf.kcm.socket.path.secure.usable.check is false,
#        this socket path will be used.
#    2.2 if krb5.conf.kcm.socket.path.secure.usable.check is true, 
#        need to check if the socket path is secure and usable.
#        - if yes, this socket path will be used.
#        - otherwise, fall back to use default socket path /var/run/.centrify-kcm-socket
#
# Default is emtpy string.
#
# krb5.conf.kcm.socket.path:

# This parameter is used to control whether do secure and usable check 
# on the kcm socket path configured in krb5.conf.kcm.socket.path
#
# The check includes:
# 1) the parent directory exists
# 2) the parent directory is not a symlink
# 3) the parent directory is writable by root only
# 4) the socket path does not exist, or it exists but it is not directory.
#    note, if the socket path already existed, when kcm server starts or restarts,
#    will overwrite it if it is not directory.
#
# Default is false, which means will not do any check.
# 
# krb5.conf.kcm.socket.path.secure.usable.check: false

# Configure alternative kerberos ccache directory when ccache type is FILE.
# 
# 1. If not configured or configured with empty value, 
#    fall back to use system default ccache directory to store kerberos ccache files.
#    - On AIX   : /var/krb5/security/creds
#    - On others: /tmp
#
# 2. If configured with non-empty value, and 
#    2.1 if adclient.krb5.ccache.dir.secure.usable.check is false,
#        will use this directory to store kerberos ccache files.
#    2.2 if adclient.krb5.ccache.dir.secure.usable.check is true, 
#        need to check if the directory is secure and usable.
#        - if yes, will use this directory to store kerberos ccache files.
#        - otherwise, fall back to use system default ccache directory to store kerberos ccache files.
# 
# Default is empty string.
#
# adclient.krb5.ccache.dir:

# This parameter is used to control whether do secure and usable check 
# on the kerberos ccache directory configured in adclient.krb5.ccache.dir
#
# The check includes:
# 1) the directory exists
# 2) the direcotry is not a symlink
# 3) the direcotry is root owned
# 4) the direcotry is world writable and has sticky bit set
#
# Default is false, which means will not do any check.
# 
# adclient.krb5.ccache.dir.secure.usable.check: false

# Support caching-only DNS server that only accepts recursive DNS request.
# Default is false.
#
# When using caching-only DNS server, if the DNS server doesn't support
# non-recursive DNS requests (e.g. dnscache in djbdns), set this parameter to true.
# If the DNS server can handle non-recursive DNS requests (e.g. dnsmasq),
# do not set this parameter to true.
#
# adclient.dns.cachingserver: false

#
# Determines the period of time (in days) that a password can be used
# before the system requires the user to change it. You can set passwords
# to expire after a number of days between 1 and 999, or you can specify
# that passwords never expire by setting the number of days to 0.
#
# If the maximum password age is between 1 and 999 days, the Minimum
# password age must be less than the maximum password age. If the maximum
# password age is set to 0, the minimum password age can be any value
# between 0 and 998 days.
# Default: 90.
#
# This parameter is controlled by the Group Policy
#
#      "Computer Configuration"
#      -> "Windows Settings"
#         -> "Security Settings"
#            -> "Password Policy"
#               -> "Maximum password age"
#
# Note this is a Domain Controller Security setting and must be controlled
# using Windows Group Policy.  Changing the value in this file will have no
# effect.
#
# secedit.system.access.maximumpasswordage: 42
secedit.system.access.maximumpasswordage: 60
#

#
# Determines the period of time (in days) that a password must be used
# before the user can change it. You can set a value between 1 and 998
# days, or you can allow changes immediately by setting the number of
# days to 0.
#
# The minimum password age must be less than the Maximum password age,
# unless the maximum password age is set to 0, indicating that passwords
# will never expire. If the maximum password age is set to 0, the minimum
# password age can be set to any value between 0 and 998.
# Default: 0
#
# This parameter is controlled by the Group Policy
#
#      "Computer Configuration"
#      -> "Windows Settings"
#         -> "Security Settings"
#            -> "Password Policy"
#               -> "Minimum password age"
#
# Note this is a Domain Controller Security setting and must be controlled
# using Windows Group Policy.  Changing the value in this file will have no
# effect.
#
# secedit.system.access.minimumpasswordage: 0
secedit.system.access.minimumpasswordage: 1
#

# Determines the number of minutes a locked-out account remains locked out
# before automatically becoming unlocked. The available range is from 0
# minutes through 99,999 minutes. If you set the account lockout duration
# to 0 or -1, the account will be locked out until an administrator explicitly
# unlocks it.
# Default: 30
#
# This parameter is controlled by the Group Policy
#
#      "Computer Configuration"
#      -> "Windows Settings"
#         -> "Security Settings"
#            -> "Account Lockout Policy"
#               -> "Account lockout duration"
#
# Manually changing the value in this file only effects disconnected mode
# login attempts and, once the connection with the DC is re-established and
# the machine group policies are updated, the settings will revert back to
# Windows group policy settings.
#
# secedit.system.access.lockoutduration: 30
secedit.system.access.lockoutduration: -1
#

# Account lockout threshold
#
# This security setting determines the number of failed logon attempts
# that causes a user account to be locked out. A locked-out account cannot
# be used until it is reset by an administrator or until the lockout duration
# for the account has expired. You can set a value between 0 and 999 failed
# logon attempts. If you set the value to 0, the account will never be
# locked out.
#
# Failed password attempts against workstations or member servers that
# have been locked using password-protected screen savers count as failed
# logon attempts.
#
# Default: 0.
#
# This parameter is controlled by the Group Policy
#
#      "Computer Configuration"
#      -> "Windows Settings"
#         -> "Security Settings"
#            -> "Account Lockout Policy"
#               -> "Account lockout threshold"
#
# Manually changing the value in this file only effects disconnected mode
# login attempts and, once the connection with the DC is re-established and
# the machine group policies are updated, the settings will revert back to
# Windows group policy settings.
#
# secedit.system.access.lockoutbadcount: 0
secedit.system.access.lockoutbadcount: 3
#

#
# This configuration parameter specifies how many days before a warning
# is issued for password expiry.
#
# The parameter value must be 0 or a positive integer.  If this parameter
# is not present, its default value is 14 days.
#
# This parameter is controlled by the Group Policy
#
#      "Computer Configuration"
#      -> "Windows Settings"
#         -> "Security Settings"
#            -> "Local Policies"
#               -> "Security Options"
#                   -> "Interactive Logon: Prompt user to change password before expiration"
#
# pam.password.expiry.warn: 14
#

#
# Disable background processing of group policies.
#
# This applies to machine and user policies.
#
# This parameter is controlled by the Group Policy
#       "Computer Configuration"
#         -> "Administrative Templates"
#            -> "System"
#               -> "Group Policy"
#                 -> "Turn off background refresh of Group Policy"
#
# gp.refresh.disable: false
#

#
# SNTP settings
#
# If true, adclient will keep the system clock in sync with the domain controller.
#
# This parameter is controlled by the Group Policy
#
#      "Computer Configuration"
#      -> "Administrative Templates"
#         -> "System"
#            -> "Windows Time Service"
#               -> "Time Providers"
#                   -> "Enable Windows NTP Client"
#
# adclient.sntp.enabled: true
#

#
# The interval between sntp clock updates.  The value is the base 2
# logarithm of the time in seconds.  For example, a value of 6 gives
# 64 seconds (2**6), and a value of 15 gives 32768 seconds, or 9.1 hours.
#
# This parameter is controlled by the Group Policy
#
#      "Computer Configuration"
#      -> "Administrative Templates"
#         -> "System"
#            -> "Windows Time Service"
#               -> "Global Configuration Settings"
#
# adclient.sntp.poll: 15
#



# What's the name of the system nobody user
nss.nobody.user: nobody
nss.nobody.group: nobody
# DO NOT use -1 here.  See setresuid().
nss.nobody.uid: 99
nss.nobody.gid: 99

# Don't call Centrify group or user iteration for these programs
# This helps prevent adding local users and groups that conflict with
# DirectControl users in AD
nss.program.ignore: useradd,adduser,groupadd,addgroup,userdel,groupdel,usermod,groupmod,chfn,chsh,chpasswd,gpasswd,pwconv,pwunconv,grpconv,grpunconv,redhat-config-users,unix_chkpwd

nss.shell.nologin: /sbin/nologin

# Skeleton directory for creating new user home directory
# If you leave this value commented out then the default value,
# /etc/skel, will be used. If you do not wish to have files
# copied from a skeleton directory, uncomment this parameter and
# point to an empty directory.
#
# pam.homeskel.dir: /etc/skel
#

#
# These parameters define the default values of the %{home}, %{shell}, %{zone}, 
# %{host}, %{site}, %{domain} runtime variables.
# These values are only used if they were not previous defined within
# a zone definition or by the configuration setting nss.runtime.var.xxx
nss.runtime.defaultvalue.var.home: /home
nss.runtime.defaultvalue.var.shell: /bin/bash
nss.runtime.defaultvalue.var.zone: $ZONE
nss.runtime.defaultvalue.var.host: $HOSTNAME
nss.runtime.defaultvalue.var.site: $SITE
nss.runtime.defaultvalue.var.domain: $DOMAIN

# Should user credentials be automatically reissued when they expired?  This
# requires a hash of the user's password to be kept in memory and will not work
# if adclient is restarted.
#
# krb5.cache.infinite.renewal: false
#


# Message displayed when a user name conflict is detected during login (see
# pam.uid.conflict). In this case, the user names match and the UIDs do not.
#
# When the message is displayed, the '%s' token is replaced with the
# name of the conflicting local account. The message must contain exactly
# one '%s' token, and no other '%' characters.
#
# pam.account.conflict.name.mesg: Account with conflicting name (%s) exists locally
#

# Message displayed when a user ID conflict is detected during login (see
# pam.uid.conflict). In this case, the UIDs match and the user names do not.
#
# When the message is displayed, the '%d' token is replaced with the
# ID of the conflicting local account. The message must contain exactly
# one '%d' token, and no other '%' characters.
#
# pam.account.conflict.uid.mesg: Account with conflicting UID (%d) exists locally
#

# Message displayed when user name and user ID conflicts are detected during
# login (see pam.uid.conflict). In this case, two local accounts were found:
# one where the user's UIDs match and names do not, and another where the names
# match and the UIDs do not.
#
# When the message is displayed, the '%s' token is replaced with the name of
# the first conflicting local account, and the '%d' token is replaced with
# the UID of the second conflicting local account. The message must contain
# exactly one '%s' token and exactly one '%d' token, in that order, and no
# other '%' characters.
#
# pam.account.conflict.both.mesg: Accounts with conflicting name (%s) and UID (%d) exist locally
#


# Specify which PKCS #11 module to be used for SmartCard support on RedHat.
# 
# $LIB variable is supported in specifying PKCS #11 module path. lib and lib64 
# will replace the value of $LIB for 32 and 64 bit system respectively.
# 
# You must re-enable SmartCard support once you change this parameter. To 
# re-enable SmartCard support, please run the following command as root.
# > /usr/bin/sctool -d && /usr/bin/sctool -e
#
# You might also want to refresh GNOME to reflect the change. You can run the
# following command as root to do so.
# > /usr/sbin/gdm-safe-restart
#
# rhel.smartcard.pkcs11.module: /usr/$LIB/pkcs11/libcentrifypkcs11.so
#

#
#
# Require smart card login for this computer.
#
# rhel.smartcard.login.force: false
#

#
# By default users are allowed to login using their Active Directory
# displayName or CN. If a conflict between two users is detected the login
# will fail.   This does require two more searches when a user is not found
# in Active Directory and hence may incur a performance penalty in domains
# with heavily loaded servers or large user populations.
#
# adclient.user.lookup.display: true
# adclient.user.lookup.cn: true
#
################################################################################
# Auto Zone (AUTO SCHEMA) Settings
#


#
# This parameter allows administrators to specify the use of Apple scheme as the
# UID and GID generation scheme for user and group in Auto Zone.
#
# This parameter only specifies the generation scheme of UID and GID, if it is
# intended to generate primary group ID using Apple scheme as well, please also
# set parameter "auto.schema.primary.gid" to -1.
#
# After the parameters are set, please run command "adflush" to flush the cache
# which stored the old UID and GID for the existing users and groups. After
# "adflush" is ran, the users and groups should have their UID and GID generated
# using Apple scheme.
#
# Changing UID and GID generation scheme may cause existing home directories and
# files ownership conflict, please make use of the helper script "fixhome.pl" to
# fix the ownership conflict problem.
#
# Notice: (1) When this setting is set to true, settings specified at parameters
# auto.schema.rids, auto.schema.first.uid and auto.schema.first.gid are ignored.
#         (2) If parameter auto.schema.groups is set, please ensure the primary
# group of the user is specified in the setting of this parameter, otherwise
# user may have problem logging in.  Please look for auto.schema.groups parameter
# for more information.
#
# Controlled by Group Policy under the setting
#       "Computer Configuration"
#       -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Generate new uid/gid using Apple scheme in Auto Zone"
#
# auto.schema.apple_scheme: false
#

# This parameter allows administrators to manually specify a unique prefix for each
# trusted domain.  This prefix must be in the range of 0-511 and is used
# with the lower 22 bits of a user's or group's RID to generate a unique 31
# bit Unix UID or GID.
#  
# If domain prefixes are not manually specified, adclient will instead use
# the lower 9 bits of the last domain sub authority from the user's or group's
# SID as the domain prefix. This is not guaranteed to generate unique UIDs and
# GIDs, unless you only have one domain, but the liklihood of a collision
# is small, for a small number of trusted domains.
#
# The format of this field is:  auto.schema.domain.prefix.<domain.name>: n
# and you specify a unique prefix for each trusted domain in your enterprise.
#
# Examples
#
# auto.schema.domain.prefix.bar.com: 1
# auto.schema.domain.prefix.foo.bar.com: 2


#
# This parameter allows Auto Zone installations to designate the
# default shell. You must run adflush to flush the cache after changing 
# this value.
#
# Controlled by Group Policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Auto Zone default shell"
#
# On Darwin, Linux
# auto.schema.shell: /bin/bash
# On Solaris, HPUX, AIX
# auto.schema.shell: /bin/sh
#

#
# This parameter enables Auto Zone to use home directory specified in
# Active Directory(Mac OS X).
# You must run adflush to flush the cache after changing 
# this value.
#
# Controlled by Group Policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Enable Auto Zone user home directory"
#
# auto.schema.use.adhomedir: true
#

#
# This parameter allows Auto Zone installations to designate the
# home Directory. %{user} and %{pgroup} can be used as placeholders. 
# %{user} will be replaced with a user name and %{pgroup} will be  
# replaced with a primary group name during login. 
# You must run adflush to flush the cache after changing 
# this value.
#
# Controlled by Group Policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Auto Zone home directory"
# On Darwin
# auto.schema.homedir: /Users/%{user}
# On Solaris
# auto.schema.homedir: /export/home/%{user}
# On Linux, HPUX, AIX
# auto.schema.homedir: /home/%{user}
#

#
# This parameter defines illegal characters in user home directory in Auto Zone.
# You must run adflush to flush the cache after changing 
# this value.
#
# Default on Mac OS X
# auto.schema.homedir.illegal_chars: \t\n/\\$><?*%|\"\'[]
# Default on Linux, Solaris, HPUX, AIX
# auto.schema.homedir.illegal_chars: \t\n /\\$><?*%|\"\'[]
#

#
# The parameter define the user name disallowd characters.
#   The upper setting up will be invalid if it is set up without empty.
#   If both are unset or empty, use the following default value as   
#   the unsavory chars.                                              
#   You should be careful to set the values not only unsavory chars  
#   but also the substitute chars, in order to avoid that the        
#   substituted unixname have been existence already.                
# You must run adflush to flush the cache after changing
# this value.
#
# Default on Mac OS X
# auto.schema.unix.name.disallow.chars: \t\n/\\><?|\"\'`[]{},:;~!@#$%^&*()=
#
# Default on Linux, Solaris, HPUX, AIX
# auto.schema.unix.name.disallow.chars: \t\n /\\><?|\"\'`[]{},:;~!@#$%^&*()=
#

# The parameter define the user name substitution of bad character.
# You must run adflush to flush the cache after changing
# this value.
#
# auto.schema.substitute.chars: _ 
#

#
# The parameter define the maximum length of a generated unix name for user.
# You must run adflush to flush the cache after changing
# this value.
#
# Default is 256 on Mac OS X, and 33 on other platforms.
#
# auto.schema.max.unix.name.length: 33
#

#
# This parameter allows Auto Zone installations to control how the
# user's unix name is generated from the Active Directory name.
# You must run adflush to flush the cache after changing 
# this value.
#
# Currently supported formats are:
#   SAM@domainName     - User@AD_DOMAIN    Joe@ACME.COM
#   NTLM               - DOMAIN<NSEP>User  ACME+Joe
#   SAM                - User              Joe
#
# The first 'adclient.ntlm.separators' key value
# determines the actual NTLM separator character.
#
# auto.schema.name.format: SAM

#
# This parameter allows Auto Zone installations to designate user's GID 
# to be set to the user's UID. If this value is set to false and 
# auto.schema.primary.gid is not set or set to -1. Then the user AD primary
# group will be used as the user's GID. If the user does not have an AD
# primary group then the user's GID will be set to the group "nobody". You must
# run adflush to flush the cache after changing this value.
#
# On Darwin
# auto.schema.private.group: false
# On Linux, Solaris, HPUX, AIX
# auto.schema.private.group: true
#

#
# This parameter allows administrators to use GID to specify the default primary
# group for all users in Auto Zone.
#
# The parameter value can be a non-negative integer or -1. The GID can be
# specified by setting a non-negative integer.
#
# When set to -1, the user AD primary group will be used as the user's GID. If
# the user does not have an AD primary group then the user's GID will be set to
# the group "nobody". Users' primary GID would be generated by the scheme we
# choose, like APPLE, RID or AD_VALUE. The priority of these schemes is "APPLE >
# RID > AD_VALUE". The default scheme is RID, We can switch to Apple scheme by
# setting the parameter auto.schema.apple_scheme.
#
# This parameter will be ignored if the parameter auto.schema.private.group is
# set to true. You must run adflush to flush the cache after changing this
# value.
#
# For backward compatibility, empty value will be treated as -1.
#
# Controlled by Group Policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Set user's primary gid in Auto Zone"
#
# On Darwin
# auto.schema.primary.gid: 20
# On Linux, Solaris, HPUX, AIX
# auto.schema.primary.gid:
#

#
# This parameter allows Auto Zone installations to do user/group iteration
# to be ONLY over the cached user/groups
#
# auto.schema.iterate.cache: false

#
# Convert user name to lower case in Auto Zone. This will affect
# user home directory as well.
#
# auto.schema.name.lower: true

#
# This parameter limits the number of objects (user/group) that are returned 
# from searches. The number of objects (user/group) that will be returned 
# will be at least "auto.schema.search.return.max" and no more than 
# "auto.schema.search.return.max + adclient.paged.search.max"
# You must restart adclient to have this take effect.
#
# auto.schema.search.return.max: 1000

#
# This parameter specifies the Active Directory users to be included in Auto 
# Zone.
#
# By default all Active Directory users are included in the Auto zone. When you 
# enable this policy, the users specified and members of the groups specified 
# in "auto.schema.allow.groups" are able to log in using their Active Directory 
# account.
#
# You specify users by name or you can list the user names in a file. The user 
# name can be specified in any of the following formats:
# - SAM account name: sAMAccountName@domain.com
#   (specify the domain if the account is not in the current domain)
# - User Principal Name: name@domain.com
# - NTLM: DOMAIN+sAMAccountName
# - Full DN: CN=commonName,...,DC=domain_component,DC=domain_component
# - Canonical Name: domain.com/container/cn
#
# If a name contains space characters, you can put the name in double quotes or 
# escape the space characters using backslashes:
# e.g. "Krusty T. Clowns", Jane\ Doe
#
# adclient writes any name that is not recognized to the Centrify DirectControl 
# log file.
#
# You can enter the list of users separated by comma, for example:
# auto.schema.allow.users: joe, janedoe, user1, user2@domain.com, DOMAIN+user3, CN=user4\,CN=Users\,DC=domain\,DC=com, domain.com/Users/user5
#
# You can also use a file to specify users, for example:
# auto.schema.allow.users: file:/etc/centrifydc/auto_users.allow
#
# In the file, enter each name line by line. You can mix name formats, for 
# example:
# joe
# janedoe
# user1
# user2@domain.com
# DOMAIN+user3
# CN=user4,CN=Users,DC=domain,DC=com
# domain.com/Users/user5
#
# Default is empty, i.e. all AD users are included in Auto Zone.
#
# Note: Not supported for express mode.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Specify AD users allowed in Auto Zone"
#
# auto.schema.allow.users:
#

#
# This parameter specifies which Active Directory users to include in the Auto 
# Zone using group membership as the criteria.
#
# By default all Active Directory users are included in the Auto Zone. When you 
# enable a group or groups in this group policy, only the users who are members 
# of the groups specified, including members of nested groups and users whose 
# primary group is set to one of the groups specified, and all users specified 
# in "auto.schema.allow.users" are able to log in using their Active Directory 
# account.
#
# Note: This parameter does not include the group in Active Directory Auto 
# Zone, just the users in that group. This means that the group is NOT 
# automatically assigned a GID. Use "auto.schema.groups" to include a group in 
# the Auto Zone and assign it a GID.
#
# Any groups listed in this group policy can be domain local, global or 
# universal groups. The groups must be security groups; however, distribution 
# groups are not supported.
#
# You specify groups by name or you can list the group names in a file. The 
# group name can be specified in any of the following formats:
# - SAM account name: sAMAccountName@domain.com
#   (specify the domain if the group is not in the current domain)
# - User Principal Name: name@domain.com
# - NTLM: DOMAIN+sAMAccountName
# - Full DN: CN=commonName,...,DC=domain_component,DC=domain_component
# - Canonical Name: domain.com/container/cn
#
# If a name contains space characters, you can put the name in double quotes or 
# escape the space characters using backslashes:
# e.g. "Domain Admins", Domain\ Users
#
# adclient writes any name that is not recognized to the Centrify DirectControl 
# log file.
#
# You can enter the list of groups of users separated by comma, for example:
# auto.schema.allow.groups: centrify_users, "Domain Admins", Domain\ Users, group1, group2@domain.com, DOMAIN+group3, CN=group4\,CN=Users\,DC=domain\,DC=com, domain.com/Users/group5
# 
# You can also use a file to specify groups, for example:
# auto.schema.allow.groups: file:/etc/centrifydc/auto_user_groups.allow
#
# In the file, enter each name line by line. You can mix name formats, for 
# example:
# centrify_users
# "Domain Admins"
# Domain Users
# group1
# group2@domain.com
# DOMAIN+group3
# CN=group4,CN=Users,DC=domain,DC=com
# domain.com/Users/group5
#
# Default is empty, i.e. all AD users are included in Auto Zone.
#
# Note: Not supported for express mode.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Specify groups of AD users allowed in Auto Zone"
#
# auto.schema.allow.groups: 
#

#
# This parameter specifies the Active Directory groups to be included in Auto 
# Zone.
#
# By default all Active Directory groups are included. When you specify one or 
# more groups in this parameter, the groups specified are assigned a group ID 
# on this computer.
#
# Note: If an Active Directory user specified in "auto.schema.allow.users" is a 
# member of a group and that group is NOT specified in "auto.schema.groups", 
# that group is ignored.
#
# Any groups listed under "auto.schema.groups" can be domain local, global or 
# universal groups. They must be security groups; however, distribution groups 
# are not supported.
#
# You specify groups by name or you can list the group names in a file. The 
# group name can be specified in any of the following formats:
# - SAM account name: sAMAccountName@domain.com
#   (specify the domain if the group is not in the current domain)
# - User Principal Name: name@domain.com
# - NTLM: DOMAIN+sAMAccountName
# - Full DN: CN=commonName,...,DC=domain_component,DC=domain_component
# - Canonical Name: domain.com/container/cn
#
# If a name contains space characters, you can put the name in double quotes or 
# escape the space characters using backslashes:
# e.g. "Domain Admins", Domain\ Users
#
# adclient writes any name that is not recognized to the Centrify DirectControl 
# log file.
#
# You can enter the list of groups separated by comma, for example:
# auto.schema.groups: centrify_groups, "Domain Admins", Domain\ Users, group1, group2@domain.com, DOMAIN+group3, CN=group4\,CN=Users\,DC=domain\,DC=com, domain.com/Users/group5
#
# You can also use a file to specify groups, for example:
# auto.schema.groups: file:/etc/centrifydc/auto_groups.allow
#
# In the file, enter each name line by line. You can mix name formats, for 
# example:
# centrify_groups
# "Domain Admins"
# Domain Users
# group1
# group2@domain.com
# DOMAIN+group3
# CN=group4,CN=Users,DC=domain,DC=com
# domain.com/Users/group5
#
# Default is empty, i.e. all AD groups are included in Auto Zone.
#
# Note: Not supported for express mode.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Specify AD groups allowed in Auto Zone"
#
# auto.schema.groups:
#
#
# Enable or disable FIPS mode.
# Default: false, disable FIPS mode
# Set to true to enable FIPS mode, note that restart of 
# adclient is required.
#
# fips.mode.enable: false

# 
# Clean up non FIPS compliant encryption type
# from kerberos keytab file for machine when adclient
# switch from non-FIPS to FIPS mode.
#
# Default: false, ie no clean up is done
#
# adclient.krb5.keytab.clean.nonfips.enctypes: false
#

# Specify whether to show command parameters in the audit trail for dzdo
# and dzsh or just the command name.
#
# The default (false) is to show only the command name.  For example, to
# keep passwords entered on the command line out of the log, leave this
# parameter set to false.  Set to true to show the command parameters as
# well as the command name.
#
# audittrail.dz.command.with.args: false
#


# Specify whether the IPSec policies from Active Directory will be applied to DirectSecure
#
# adsec.enable: true
#
################################################################################
# MFA Settings
#




 




#
# Specify the maximum amount of simultaneous cloud authentication 
# connections from adclient to connectors/cloud. 
# Default value is 10. 
# Should be less than the maximum number of threads the agent allocating for 
# processing client, which is specified by adclient.clients.threads.max.
# Changing this parameter requires a restart of adclient.
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Set the maximum simultaneous Centrify MFA authentication requests allowed"
#
# adclient.cloud.auth.conn.max: 10
#

#
# This parameter allows administrators to specify a cloud connector in current 
# forest to provide connectivity between on-prem LINUX/UNIX servers and cloud 
# server which provides cloud authentication services.
#
# Administrators can use either IP address or FQDN in this parameter.
# For example, 
# adclient.cloud.connector: 192.168.1.61:8080
# or
# adclient.cloud.connector: connector.mydomain.com:8080
# Note that port 8080 is the default port for cloud connectors.
#
# By default, cloud connector is not specified by this parameter and adclient will
# automatically discover a valid and nearest cloud connector.
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Set a Centrify Connector in current forest for provide Centrify MFA authentication service"
#
# adclient.cloud.connector:
#

#
# Specify the interval of background task to refresh cloud connectors.
# This task searches cloud connectors in the forest and re-select a cloud connector
# to provide connectivity to cloud.
# If the interval is set to 0, the background task to refresh cloud connectors will
# be suspended.
# To resume the background task when it is suspended, this parameter should be set to
# a non-zero value followed by command "adflush -c".
#
# Default is 8 hours.
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Set the cloud connector refresh interval"
#
# adclient.cloud.connector.refresh.interval: 8
#













#
# Specify a list of programs which ignore MFA. 
# Programs using Centrify PAM for authentication require users to perform MFA if they have 
# "MFA required" sysrights. However MFA feature is not required by some programs,
# administrators can add the program names in this parameter so that MFA will be bypassed. 
#
# By default, known programs which do not support MFA are in the list.
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Pam Settings"
#               -> "Specify programs for which multi-factor authentication is ignored"
# Mac OS X
# pam.mfa.program.ignore: ftpd proftpd vsftpd java httpd cdc_chkpwd kdm unix2_chkpwd dspluginhelperd loginwindow 
# Other platforms
# pam.mfa.program.ignore: ftpd proftpd vsftpd java httpd cdc_chkpwd kdm unix2_chkpwd
#

#
# MFA for express, autozone, and classic zone.
# Specify whether to enable MFA or not.
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "MFA Settings"
#               -> "Enable multi-factor authentication for express, autozone, and classic zone"
#
# Default is false.
#
# You need to run adflush to expire the cache after manually change this
# setting.
#
# adclient.legacyzone.mfa.enabled: false
#

#
# MFA for express, autozone, and classic zone.
# Specify a list of users that require MFA.
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "MFA Settings"
#               -> "Specify AD users that require multi-factor authentication"
#
# This parameter supports sAMAccountName, sAMAccountName@domain, UPN,
# canonicalName, dn, and *.
#
# If set value to *, then all AD users require MFA.
#
# Default is empty list. You can also list the user names in a file.
# Example value: *
#                user1, user2@domain.com
#                file:/etc/centrifydc/mfa.required.users
#
# You must run adflush to expire the cache after changing this value. 
#
# adclient.legacyzone.mfa.required.users: 
#

#
# MFA for express, autozone, and classic zone.
# Specify a list of groups that require MFA.
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "MFA Settings"
#               -> "Specify AD groups that require multi-factor authentication"
#
# This parameter supports sAMAccountName, sAMAccountName@domain, and
# canonicalName.
#
# Default is empty list. You can also list the group names in a file.
# Example value: group1, group2@domain.com
#                file:/etc/centrifydc/mfa.required.groups
#
# You must run adflush to expire the cache after changing this value. 
#
# adclient.legacyzone.mfa.required.groups:
#

#
# MFA for express, autozone, and classic zone.
# Specify a list of rescue users that can login without MFA when MFA is
# temporarily not available.
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "MFA Settings"
#               -> "Specify AD users that can login when multi-factor authentication is unavailable"
#
# This parameter supports sAMAccountName, sAMAccountName@domain, UPN,
# canonicalName, dn, and *.
#
# If set value to *, then all AD users are rescue user.
#
# Default is empty list. You can also list the user names in a file.
# Example value: *
#                user1, user2@domain.com
#                file:/etc/centrifydc/mfa.rescue.users
#
# You must run adflush to expire the cache after changing this value. 
#
# adclient.legacyzone.mfa.rescue.users:
#

#
# MFA for express, autozone, and classic zone.
# Specify cloud URL for MFA.
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "MFA Settings"
#               -> "Specify cloud URL for multi-factor authentication"
#
# Default is empty.
# Example value: https://tenant-id.domain.com:443/
#
# You must run "adflush -c" to update cloud connectors for Centrify
# agent after changing this value. 
#
# adclient.legacyzone.mfa.cloudurl:
#

#
# MFA for express, autozone, and classic zone.
# Specify background fetching interval for MFA required groups. Fetching MFA
# required groups in background will improve MFA login performance.
#
# Default is 30 minutes.
# If set to 0, background fetching will be disabled.
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "MFA Settings"
#               -> "Set background fetching interval for groups that require multi-factor authentication"
#
# adclient.legacyzone.mfa.background.fetch.interval: 30
#
 
#
# Dzdo MFA for classic zone.
# If this is true and MFA is enabled for the classic zone, 
# when dzdo needs the re-authentication as self for invoking user
# who is already set to require MFA, it will try MFA for such user.
#
# Default is false.
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Dzdo Settings"
#               -> "Enable MFA for dzdo in classic zone"
#
# dzdo.legacyzone.mfa.enabled: false
#

#
# Specify the file that stores the certificate to verify
# the cloud server certificate for connections.
# This option is used only when adclient.cloud.skip.cert.verification : false.
# As default, it's not set, that means 
# adclient will try to find the store itself as Centrify curl does.
# Please ensure the file is valid and updated with required certificate.
#
# The default is not set.
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Specify the certificate store file to verify the Centrify identity platform certificate"
#
# adclient.cloud.cert.store:
#

#
# Set to true to skip the verification for cloud certificate.
# By default, such verification is required for cloud connections.
#
# The default is false.
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Set skipping the verification for cloud certificate"
#
# adclient.cloud.skip.cert.verification: false
#
samba.base.path: /usr

samba.winbindd.listen.path: /run/samba/winbindd
